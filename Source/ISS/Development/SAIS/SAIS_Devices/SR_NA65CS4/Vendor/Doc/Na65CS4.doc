
                               Synchro/Resolver
________________________________________________________________________________

  Introduction:

  This instrument driver provides programming support for Synchro/Resolver.
  It contains functions for opening, configuring, taking measurements from, and
  closing the instrument.

________________________________________________________________________________

  Assumptions:

  To successfully use this module, the following conditions must be met:

  For GPIB instrument drivers:
         -  the instrument is connected to the GPIB.
         -  the GPIB address supplied to the initialize function must match the
            GPIB address of the instrument.

  For VXI instrument drivers:
         -  the instrument is installed in the VXI mainframe and you are
            using one of the following controller options:
                  Embedded controller
                  MXI
                  MXI2
                  GPIB-VXI
         -  the logical address supplied to the initialize function must
            match the logical address of the instrument.

  For RS-232 instrument drivers:
         -  the instrument is connected to the RS-232 interface.
         -  the COM port, baud rate, parity, and timeout supplied to the
            initialize function must match the settings of the instrument.

________________________________________________________________________________

  Error and Status Information:

  Each function in this instrument driver returns a status code that
  either indicates success or describes an error or warning condition.
  Your program should examine the status code from each call to an
  instrument driver function to determine if an error occurred.
  The general meaning of the status code is as follows:

       Value                  Meaning
       -------------------------------
       0                      Success
       Positive Values        Warnings
       Negative Values        Errors

  The description of each instrument driver function lists possible error
  codes and their meanings

________________________________________________________________________________

  How To Use This Document:

  Use this document as a programming reference manual.
  It describes each function in the

                               Synchro/Resolver

  instrument.  The functions appear in alphabetical order, with a description
  of the function and its C syntax, a description of each parameter, and a list
  of possible error codes.

________________________________________________________________________________

Function Tree Layout:

   Class/Panel Name:                           Function Name:

      Initialize                               na65cs3_init
      Initialize With Options                  na65cs3_InitWithOptions
      Application Functions
         Instrument Find                       na65cs3_find
         Instrument Model Info                 na65cs3_getModelInfo
         Instrument Model Part Support         na65cs3_getModelParts
         Instrument Part Spec Info             na65cs3_getPartSpecInfo
         Query Language Support                na65cs3_query_language
         Query Instrument ID                   na65cs3_query_id
      Configuration Functions
         Configure Measurement Channel
            Configure Measurement Channel      na65cs3_config_SD
            Config Measurement DC Scale        na65cs3_config_SDDCScale
            Config Measurement Bandwidth       na65cs3_config_SDBandwidth
            Config Measurement Max Ang Time    na65cs3_config_SDMaxAngSettleTime
            Config Measurement Signal Mode     na65cs3_config_SDSignalMode
            Config Measurement Ratio           na65cs3_config_SDRatio
            Config Measurement Ref Src         na65cs3_config_SDRefSrcMode
            Config Measurement Relay State     na65cs3_config_SDRelayIOState
            Config Measurement Update Mode     na65cs3_config_SDUpdateMode
         Configure Stimulus Channel
            Configure Stimulus Rotation        na65cs3_config_DSRotation
            Config Stimulus Angle              na65cs3_config_DSAngle
            Config Stimulus DC Scale           na65cs3_config_DSDCScale
            Config Stimulus Signal Mode        na65cs3_config_DSSignalMode
            Config Stimulus Ratio              na65cs3_config_DSRatio
            Config Stimulus Ref Src            na65cs3_config_DSRefSrcMode
            Config Stimulus Relay State        na65cs3_config_DSRelayIOState
            Config Stimulus Line-Line Volt     na65cs3_config_DSLineToLineVoltage
            Config Stimulus Input Ref Volt     na65cs3_config_DSInputRefVolt
            Config Stimulus Rotation Rate      na65cs3_config_DSRotationRate
            Config Stimulus Rotate Stop Ang    na65cs3_config_DSRotateStopAng
            Config Stimulus Rotation Mode      na65cs3_config_DSRotationMode
            Config Stimulus Trigger Source     na65cs3_config_DSTriggerSrc
            Config Stimulus Trigger Slope      na65cs3_config_DSTriggerSlope
            Config Stimulus Phase Shift        na65cs3_config_DSPhaseShift
         Configure Reference Channel
            Configure Reference Channel        na65cs3_config_REF
            Config Reference Freq              na65cs3_config_REFFreq
            Config Reference Volt              na65cs3_config_REFVolt
            Config Reference Relay State       na65cs3_config_REFRelayIOState
         Set/Get/Check Attribute
            Set Attribute
               Set Attribute ViInt32           na65cs3_SetAttributeViInt32
               Set Attribute ViReal64          na65cs3_SetAttributeViReal64
               Set Attribute ViString          na65cs3_SetAttributeViString
               Set Attribute ViBoolean         na65cs3_SetAttributeViBoolean
               Set Attribute ViSession         na65cs3_SetAttributeViSession
            Get Attribute
               Get Attribute ViInt32           na65cs3_GetAttributeViInt32
               Get Attribute ViReal64          na65cs3_GetAttributeViReal64
               Get Attribute ViString          na65cs3_GetAttributeViString
               Get Attribute ViBoolean         na65cs3_GetAttributeViBoolean
               Get Attribute ViSession         na65cs3_GetAttributeViSession
            Check Attribute
               Check Attribute ViInt32         na65cs3_CheckAttributeViInt32
               Check Attribute ViReal64        na65cs3_CheckAttributeViReal64
               Check Attribute ViString        na65cs3_CheckAttributeViString
               Check Attribute ViBoolean       na65cs3_CheckAttributeViBoolean
               Check Attribute ViSession       na65cs3_CheckAttributeViSession
      Action/Status Functions
         Stimulus Command
            Initiate Rotation                  na65cs3_initiate_DSRotation
            Get Rotation Complete              na65cs3_get_DSRotationComplete
      Data Functions
         Measurement Queries
            Read Measurement Angle             na65cs3_query_SDAngle
            Read Measurement Velocity          na65cs3_query_SDVelocity
            Read Measurement DC Scale          na65cs3_query_SDDCScale
            Read Measurement Bandwidth         na65cs3_query_SDBandwidth
            Read Measurement Max Ang Time      na65cs3_query_SDMaxAngTime
            Read Measurement Signal Mode       na65cs3_query_SDSignalMode
            Read Measurement Ratio             na65cs3_query_SDRatio
            Read Measurement Ref Src           na65cs3_query_SDRefSrcMode
            Read Measurement Relay State       na65cs3_query_SDRelayIOState
            Read Measurement Update Mode       na65cs3_query_SDUpdateMode
         Stimulus Queries
            Read Stimulus Angle                na65cs3_query_DSAngle
            Read Stimulus DC Scale             na65cs3_query_DSDCScale
            Read Stimulus Signal Mode          na65cs3_query_DSSignalMode
            Read Stimulus Ratio                na65cs3_query_DSRatio
            Read Stimulus Ref Src              na65cs3_query_DSRefSrcMode
            Read Stimulus Relay State          na65cs3_query_DSRelayIOState
            Read Stimulus Line-Line Volt       na65cs3_query_DSLineToLineVoltage
            Read Stimulus Input Ref Volt       na65cs3_query_DSInputRefVolt
            Read Stimulus Rotation Rate        na65cs3_query_DSRotationRate
            Read Stimulus Rotate Stop Ang      na65cs3_query_DSRotateStopAng
            Read Stimulus Rotation Mode        na65cs3_query_DSRotationMode
            Read Stimulus Trigger Source       na65cs3_query_DSTriggerSrc
            Read Stimulus Trigger Slope        na65cs3_query_DSTriggerSlope
            Read Stimulus Phase Shift          na65cs3_query_DSPhaseShift
         Reference Queries
            Read Reference Freq                na65cs3_query_RefFreq
            Read Reference Volt                na65cs3_query_RefVolt
            Read Reference Relay State         na65cs3_query_RefRelayIOState
      Utility Functions
         Reset                                 na65cs3_reset
         Reset With Defaults                   na65cs3_ResetWithDefaults
         Disable                               na65cs3_Disable
         Self-Test                             na65cs3_self_test
         Revision Query                        na65cs3_revision_query
         Error-Query                           na65cs3_error_query
         Error Message                         na65cs3_error_message
         Invalidate All Attributes             na65cs3_InvalidateAllAttributes
         Error Info
            Get Error                          na65cs3_GetError
            Clear Error                        na65cs3_ClearError
         Coercion Info
            Get Next Coercion Record           na65cs3_GetNextCoercionRecord
         Interchangeability Info
            Get Next Interchange Warning       na65cs3_GetNextInterchangeWarning
            Clear Interchange Warnings         na65cs3_ClearInterchangeWarnings
            Reset Interchange Check            na65cs3_ResetInterchangeCheck
         Locking
            Lock Session                       na65cs3_LockSession
            Unlock Session                     na65cs3_UnlockSession
         Instrument I/O
            Write Instrument Data              na65cs3_WriteInstrData
            Read Instrument Data               na65cs3_ReadInstrData
      Close                                    na65cs3_close
________________________________________________________________________________

  Synchro/Resolver

      This instrument driver contains programming support for the
      Synchro/Resolver.  This driver has all the functions that IVI and
      VXIplug&play require.
      
      Note:  This driver requires the VISA and IVI libraries.
________________________________________________________________________________

              The following functions are in alphabetical order.

________________________________________________________________________________

  na65cs3_CheckAttributeViBoolean

      ViStatus na65cs3_CheckAttributeViBoolean (ViSession instrumentHandle,
                                                ViChar _VI_FAR channelName[],
                                                ViAttr attributeID,
                                                ViBoolean attributeValue);

  Purpose

      This function checks the validity of a value you specify for a ViBoolean
      attribute.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to check the attribute value. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViBoolean
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViBoolean are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViBoolean

          Pass the value which you want to verify as a valid value for the
          attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_CheckAttributeViInt32

      ViStatus na65cs3_CheckAttributeViInt32 (ViSession instrumentHandle,
                                              ViChar _VI_FAR channelName[],
                                              ViAttr attributeID,
                                              ViInt32 attributeValue);

  Purpose

      This function checks the validity of a value you specify for a ViInt32
      attribute.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to check the attribute value. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViInt32 type.
            If you choose to see all IVI attributes, the data types appear
            to the right of the attribute names in the list box.
            Attributes with data types other than ViInt32 are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViInt32

          Pass the value which you want to verify as a valid value for the
          attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_CheckAttributeViReal64

      ViStatus na65cs3_CheckAttributeViReal64 (ViSession instrumentHandle,
                                               ViChar _VI_FAR channelName[],
                                               ViAttr attributeID,
                                               ViReal64 attributeValue);

  Purpose

      This function checks the validity of a value you specify for a ViReal64
      attribute.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to check the attribute value. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViReal64
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViReal64 are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViReal64

          Pass the value which you want to verify as a valid value for the
          attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_CheckAttributeViSession

      ViStatus na65cs3_CheckAttributeViSession (ViSession instrumentHandle,
                                                ViChar _VI_FAR channelName[],
                                                ViAttr attributeID,
                                                ViSession attributeValue);

  Purpose

      This function checks the validity of a value you specify for a ViSession
      attribute.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to check the attribute value. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViSession
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViSession are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViSession

          Pass the value which you want to verify as a valid value for the
          attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_CheckAttributeViString

      ViStatus na65cs3_CheckAttributeViString (ViSession instrumentHandle,
                                               ViChar _VI_FAR channelName[],
                                               ViAttr attributeID,
                                               ViChar _VI_FAR attributeValue[]);

  Purpose

      This function checks the validity of a value you specify for a ViString
      attribute.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to check the attribute value. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViString
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViString are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViChar[]

          Pass the value which you want to verify as a valid value for the
          attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_ClearError

      ViStatus na65cs3_ClearError (ViSession instrumentHandle);

  Purpose

      This function clears the error code and error description for the IVI
      session. If the user specifies a valid IVI session for the
      instrument_handle parameter, this function clears the error information
      for the session. If the user passes VI_NULL for the Vi parameter, this
      function clears the error information for the current execution thread.
      If the Vi parameter is an invalid session, the function does nothing and
      returns an error.
      The function clears the error code by setting it to VI_SUCCESS.  If the
      error description string is non-NULL, the function de-allocates the error
      description string and sets the address to VI_NULL.
      
      Maintaining the error information separately for each thread is useful if
      the user does not have a session handle to pass to the na65cs3_GetError
      function, which occurs when a call to na65cs3_Init or
      na65cs3_InitWithOptions fails.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_ClearInterchangeWarnings

      ViStatus na65cs3_ClearInterchangeWarnings (ViSession instrumentHandle);

  Purpose

      This function clears the list of current interchange warnings.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_close

      ViStatus na65cs3_close (ViSession instrumentHandle);

  Purpose

      This function performs the following operations:
      
      - Closes the instrument I/O session.
      
      - Destroys the instrument driver session and all of its attributes.
      
      - Deallocates any memory resources the driver uses.
      
      Notes:
      
      (1) You must unlock the session before calling na65cs3_close.
      
      (2) After calling na65cs3_close, you cannot use the instrument driver
      again until you call na65cs3_init or na65cs3_InitWithOptions.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_config_DSAngle

      ViStatus na65cs3_config_DSAngle (ViSession vi, ViInt16 channel,
                                       ViInt16 channelGrade, ViReal64 angle);

  Purpose

      This function sets the stimulus channel output angle in degrees. The
      range for the output angle is -359.9999 to 359.9999 degrees.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      angle

          Variable Type       ViReal64

          Pass the channel output angle in degrees. The valid range for the
          output angle is -359.9999 to 359.9999 degrees.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSDCScale

      ViStatus na65cs3_config_DSDCScale (ViSession vi, ViInt16 channel,
                                         ViInt16 channelGrade,
                                         ViInt16 DCScale);

  Purpose

      This function sets the stimulus channel's DC output scale. Full scale is
      10 Volts. Range: 100 <= DC Scale <= 1000.
      
      The value entered for the DC output scale determines the DC output
      voltage. For example:
       DC output scale value = 100 sets +/-100 deg/sec = +/-10 volts
       DC output scale value = 1000 sets +/-1000 deg/sec = +/-10 volts
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      DCScale

          Variable Type       ViInt16

          Pass the channel DC output scale for which you want to set for the
          channel's DC output voltage. The full scale voltage output is +/- 10
          volts. The valid range for the DC output scale is 100 to 1000.
          
          The value entered for the DC output scale determines the DC output
          voltage. For example:
           DC output scale value = 100 sets +/-100 deg/sec = +/-10 volts
           DC output scale value = 1000 sets +/-1000 deg/sec = +/-10 volts

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSInputRefVolt

      ViStatus na65cs3_config_DSInputRefVolt (ViSession vi, ViInt16 channel,
                                              ViInt16 channelGrade,
                                              ViReal64 inputRefVoltage_v);

  Purpose

      This function sets the stimulus channel input reference voltage in Volts.
      This does not apply when the channel reference source is internal and
      will be ignored. The valid range for the input reference voltage is 2 to
      115 volts.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      inputRefVoltage_v

          Variable Type       ViReal64

          Pass the channel input reference voltage in Volts. This does not
          apply when the channel reference source is internal and will be
          ignored. The valid range for the input reference voltage is 2 to 115
          volts.

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSLineToLineVoltage

      ViStatus na65cs3_config_DSLineToLineVoltage (ViSession vi,
                                                   ViInt16 channel,
                                                   ViInt16 channelGrade,
                                                   ViReal64 lineToLine_v);

  Purpose

      This function sets the stimulus channel line-to-line voltage in volts.
      The valid range for the line-to-line voltage is 1 to 90 volts.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      lineToLine_v

          Variable Type       ViReal64

          Pass the channel line-to-line voltage in Volts. The valid range for
          the line-to-line voltage is 1 to 90 volts.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSPhaseShift

      ViStatus na65cs3_config_DSPhaseShift (ViSession vi, ViInt16 channel,
                                            ViInt16 channelGrade,
                                            ViReal64 phaseShift);

  Purpose

      This function sets the stimulus channel phase shift in degrees. The valid
      range for the phase shift is -179.9 to 179.9 degrees.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      phaseShift

          Variable Type       ViReal64

          Pass the channel phase shift in degrees. The valid range for the
          phase shift is -179.9 to 179.9 degrees.
          
          
________________________________________________________________________________

  na65cs3_config_DSRatio

      ViStatus na65cs3_config_DSRatio (ViSession vi, ViInt16 channel,
                                       ViInt16 channelGrade, ViInt16 ratio);

  Purpose

      This function sets the stimulus channel 2-speed/Multi-speed ratio for
      EVEN channels only. The ratio cannot be set for ODD channels and will be
      ignored. Valid ratio range is 1 to 255.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      ratio

          Variable Type       ViInt16

          Pass the channel 2-speed/multi-speed ratio. The valid range for the
          ratio is 1 to 255.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSRefSrcMode

      ViStatus na65cs3_config_DSRefSrcMode (ViSession vi, ViInt16 channel,
                                            ViInt16 channelGrade,
                                            ViInt16 refSourceMode);

  Purpose

      This function sets the stimulus channel reference source to either
      Internal or External. Note, Internal Reference Source for Channels 1 and
      2 is Reference 1 and Internal Reference Source for Channels 3 and 4 is
      Reference 2.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      refSourceMode

          Variable Type       ViInt16

          Pass the channel reference source. Valid values are:
          
          NA65CS3_INT = 0   (INTERNAL Reference Source)
          NA65CS3_EXT = 1   (EXTERNAL Reference Source)
          
          Note, the internal reference source for Channels 3 and 4 is Reference
          2.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSRelayIOState

      ViStatus na65cs3_config_DSRelayIOState (ViSession vi, ViInt16 channel,
                                              ViInt16 channelGrade,
                                              ViInt16 relayIOState);

  Purpose

      This function sets the stimulus channel I/O isolation relay state to
      either Open or Close.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      relayIOState

          Variable Type       ViInt16

          Pass the channel I/O isolation relay state. Valid values are:
          
          NA65CS3_OPEN  = 0  (OPEN relay state)
          NA65CS3_CLOSE = 1  (CLOSE relay state)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSRotateStopAng

      ViStatus na65cs3_config_DSRotateStopAng (ViSession vi, ViInt16 channel,
                                               ViInt16 channelGrade,
                                               ViReal64 rotationStopAngle);

  Purpose

      This function sets the stimulus channel rotation stop angle in degrees.
      The valid range for the rotation stop angle is -359.9999 to 359.9999
      degrees.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationStopAngle

          Variable Type       ViReal64

          Pass the channel rotation stop angle in degrees. The valid range for
          the rotation stop angle is -359.9999 to 359.9999 degrees.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSRotation

      ViStatus na65cs3_config_DSRotation (ViSession vi, ViInt16 channel,
                                          ViInt16 channelGrade,
                                          ViReal64 rotationRate,
                                          ViReal64 rotationStopAngle,
                                          ViInt16 rotationMode);

  Purpose

      This functions sets the stimulus (DS) channel's configurable settings for
      angle rotation.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationRate

          Variable Type       ViReal64

          Pass the channel rotation rate in revolutions per second (RPS).  The
          valid range for the rotation rate is 0.15 to 13.60.

      rotationStopAngle

          Variable Type       ViReal64

          Pass the channel rotation stop angle in degrees. The valid range for
          the rotation stop angle is -359.9999 to 359.9999 degrees.
          

      rotationMode

          Variable Type       ViInt16

          Pass the channel rotation mode. Valid values are:
          
          NA65CS3_CONT = 0   (CONTINUOUS Rotation Mode)
          NA65CS3_STEP = 1   (STEP Rotation Mode)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSRotationMode

      ViStatus na65cs3_config_DSRotationMode (ViSession vi, ViInt16 channel,
                                              ViInt16 channelGrade,
                                              ViInt16 rotationMode);

  Purpose

      This function sets the stimulus channel rotation mode to either
      Continuous or Step.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationMode

          Variable Type       ViInt16

          Pass the channel rotation mode. Valid values are:
          
          NA65CS3_CONT = 0   (CONTINUOUS Rotation Mode)
          NA65CS3_STEP = 1   (STEP Rotation Mode)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSRotationRate

      ViStatus na65cs3_config_DSRotationRate (ViSession vi, ViInt16 channel,
                                              ViInt16 channelGrade,
                                              ViReal64 rotationRate);

  Purpose

      This function sets the stimulus channel rotation rate in revolutions per
      second (RPS). The valid range for the rotation rate is 0.15 to 13.60 and
      0 to stop rotation.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationRate

          Variable Type       ViReal64

          Pass the channel rotation rate in revolutions per second (RPS).  The
          valid range for the rotation rate is 0.15 to 13.60.

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSSignalMode

      ViStatus na65cs3_config_DSSignalMode (ViSession vi, ViInt16 channel,
                                            ViInt16 channelGrade,
                                            ViInt16 signalMode);

  Purpose

      This function sets the stimulus channel signal format mode to either
      Resolver or Synchro.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      signalMode

          Variable Type       ViInt16

          Pass the channel signal format mode. Valid values are:
          
          NA65CS3_RESOLVER = 0   (RESOLVER Signal Format Mode)
          NA65CS3_SYNCHRO  = 1   (SYNCHRO Signal Format Mode)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_DSTriggerSlope

      ViStatus na65cs3_config_DSTriggerSlope (ViSession vi, ViInt16 channel,
                                              ViInt16 channelGrade,
                                              ViInt32 triggerSlope);

  Purpose

      This function sets the stimulus channel trigger slope to either Negative
      or Positive.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      triggerSlope

          Variable Type       ViInt32

          Pass the channel trigger slope. Valid values are:
          
          NA65CS3_NEG = 0   (NEGATIVE going level)
          NA65CS3_POS = 1   (POSITIVE going level)
          
________________________________________________________________________________

  na65cs3_config_DSTriggerSrc

      ViStatus na65cs3_config_DSTriggerSrc (ViSession vi, ViInt16 channel,
                                            ViInt16 channelGrade,
                                            ViInt16 triggerSource);

  Purpose

      This function sets the stimulus channel trigger source to Bus, Internal,
      External, or TTL Level.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      triggerSource

          Variable Type       ViInt16

          Pass the channel trigger source. Valid values are:
          
          NA65CS3_INT = 0   (INTERNAL Trigger Source)
          NA65CS3_EXT = 1   (EXTERNAL Trigger Source)
          NA65CS3_BUS = 2   (BUS Trigger Source)
          NA65CS3_TTL = 3   (TTL Level Trigger Source)
          
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_REF

      ViStatus na65cs3_config_REF (ViSession vi, ViInt16 channel,
                                   ViReal64 frequency_hz, ViReal64 voltage_v,
                                   ViInt16 relayIOState);

  Purpose

      This functions sets the reference generator channel's configurable
      settings.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to configure the
          instrument. Number of Valid Channels are based on the Part Number
          Designation. Valid range of Channel Numbers: 1 to 3.
          

      frequency_hz

          Variable Type       ViReal64

          Pass the reference generator frequency in hertz. The valid range for
          the frequency is based on the Part Number Designation.
          
          

      voltage_v

          Variable Type       ViReal64

          Pass the reference generator voltage in volts. The valid range for
          the reference generator voltage is 2 to 115 volts.

      relayIOState

          Variable Type       ViInt16

          Pass the channel I/O isolation relay state. Valid values are:
          
          NA65CS3_OPEN  = 0  (OPEN relay state)
          NA65CS3_CLOSE = 1  (CLOSE relay state)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_REFFreq

      ViStatus na65cs3_config_REFFreq (ViSession vi, ViInt16 channel,
                                       ViReal64 frequency_Hz);

  Purpose

      This function sets the reference generator channel frequency in hertz.
      The valid range for the frequency is based on the Part Number
      Designation.
      
      Part Number Frequency Range Designators:
      A = 360 Hz to 2 KHz
      B = 360 Hz to 4 KHz
      C = 47 Hz to 2 KHz
      D = 47 Hz to 4 KHz
      E = 47 Hz to 10 KHz
      F = 47 Hz to 20 KHz
      G = 47 Hz to 5 KHz
      
      
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to configure the
          instrument. Number of Valid Channels are based on the Part Number
          Designation. Valid range of Channel Numbers: 1 to 3.
          

      frequency_Hz

          Variable Type       ViReal64

          Pass the reference generator frequency in hertz. The valid range for
          the frequency is based on the Part Number Designation.
          
          
________________________________________________________________________________

  na65cs3_config_REFRelayIOState

      ViStatus na65cs3_config_REFRelayIOState (ViSession vi, ViInt16 channel,
                                               ViInt16 relayIOState);

  Purpose

      This function sets the reference generator channel I/O isolation relay
      state to either Open or Close.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to configure the
          instrument. Number of Valid Channels are based on the Part Number
          Designation. Valid range of Channel Numbers: 1 to 3.
          

      relayIOState

          Variable Type       ViInt16

          Pass the channel I/O isolation relay state. Valid values are:
          
          NA65CS3_OPEN  = 0  (OPEN relay state)
          NA65CS3_CLOSE = 1  (CLOSE relay state)
          
________________________________________________________________________________

  na65cs3_config_REFVolt

      ViStatus na65cs3_config_REFVolt (ViSession vi, ViInt16 channel,
                                       ViReal64 voltage_v);

  Purpose

      This function sets the reference generator channel voltage in volts. The
      valid range for the reference generator voltage is 2 to 115 volts.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to configure the
          instrument. Number of Valid Channels are based on the Part Number
          Designation. Valid range of Channel Numbers: 1 to 3.
          

      voltage_v

          Variable Type       ViReal64

          Pass the reference generator voltage in volts. The valid range for
          the reference generator voltage is 2 to 115 volts.
________________________________________________________________________________

  na65cs3_config_SD

      ViStatus na65cs3_config_SD (ViSession vi, ViInt16 channel,
                                  ViInt16 signalMode, ViInt16 bandwidth,
                                  ViInt16 refSourceMode, ViInt16 DCScale,
                                  ViInt16 ratio, ViInt16 relayIOState,
                                  ViInt16 updateMode,
                                  ViInt16 maxWaitTime_Sec);

  Purpose

      This functions sets the measurement (SD) channel's configurable settings.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          
          
          

      signalMode

          Variable Type       ViInt16

          Pass the channel signal format mode. Valid values are:
          
          0 = RESOLVER
          1 = SYNCHRO
          

      bandwidth

          Variable Type       ViInt16

          Pass the channel bandwidth mode for which you want the channel to
          operate with. Valid values are:
          
          0 = HIGH bandwidth for 100 Hz Bandwidth
          1 = LOW bandwidth for 10 Hz Bandwidth
          
          Use LOW bandwidth for carrier (reference) frequency < 300 Hz.
          

      refSourceMode

          Variable Type       ViInt16

          Pass the channel reference source. Valid values are:
          
          0 = Internal
          1 = External
          
          Note, the internal reference source for Channels 3 and 4 is Reference
          2.
          

      DCScale

          Variable Type       ViInt16

          Pass the channel DC output scale for which you want to set for the
          channel's DC output voltage. The full scale voltage output is +/- 10
          volts. The valid range for the DC output scale is 100 to 1000.
          
          The value entered for the DC output scale determines the DC output
          voltage. For example:
           DC output scale value = 100 sets +/-100 deg/sec = +/-10 volts
           DC output scale value = 1000 sets +/-1000 deg/sec = +/-10 volts

      ratio

          Variable Type       ViInt16

          This function sets the channel 2-speed/Multi-speed ratio for EVEN
          channels only. The ratio cannot be set for ODD channels and will be
          ignored. Valid ratio range is 1 to 255.
          

      relayIOState

          Variable Type       ViInt16

          Pass the channel I/O isolation relay state. Valid values are:
          
          0 = OPEN
          1 = CLOSE
          

      updateMode

          Variable Type       ViInt16

          Pass the channel update mode. Valid values are:
          
          0 = LATCH
          1 = TRACK
          

      maxWaitTime_Sec

          Variable Type       ViInt16

          Pass the maximum wait time in seconds for the settled API (SD)
          reading. The valid range for the maximum angle settle time is 0 to
          20.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDBandwidth

      ViStatus na65cs3_config_SDBandwidth (ViSession vi, ViInt16 channel,
                                           ViInt16 bandwidth);

  Purpose

      This function sets bandwidth for the measurement channel. High Bandwidth
      for 100 Hz or Low Bandwidth for 10 Hz.  Note, use Low Bandwidth for
      carrier (reference) frequency < 300 Hz.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      bandwidth

          Variable Type       ViInt16

          Pass the channel bandwidth mode for which you want the channel to
          operate with. Valid values are:
          
          NA65CS3_HIGH_BW = 0   (HIGH bandwidth for 100 Hz Bandwidth)
          NA65CS3_LOW_BW  = 1   (LOW bandwidth for 10 Hz Bandwidth)
          
          Use LOW bandwidth for carrier (reference) frequency < 300 Hz.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDDCScale

      ViStatus na65cs3_config_SDDCScale (ViSession vi, ViInt16 channel,
                                         ViInt16 DCScale);

  Purpose

      This function sets the measurement channel DC output scale. Full scale is
      10 Volts. Range: 100 <= DC Scale <= 1000.
      
      The value entered for the DC output scale determines the DC output
      voltage. For example:
       DC output scale value = 100 sets +/-100 deg/sec = +/-10 volts
       DC output scale value = 1000 sets +/-1000 deg/sec = +/-10 volts

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      DCScale

          Variable Type       ViInt16

          Pass the channel DC output scale for which you want to set for the
          channel's DC output voltage. The full scale voltage output is +/- 10
          volts. The valid range for the DC output scale is 100 to 1000.
          
          The value entered for the DC output scale determines the DC output
          voltage. For example:
           DC output scale value = 100 sets +/-100 deg/sec = +/-10 volts
           DC output scale value = 1000 sets +/-1000 deg/sec = +/-10 volts

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDMaxAngSettleTime

      ViStatus na65cs3_config_SDMaxAngSettleTime (ViSession vi,
                                                  ViInt16 channel,
                                                  ViInt16 maxWaitTime_Sec);

  Purpose

      This function sets the maximum wait time in seconds to wait for the API
      (S/D) channel to settle before reading the measurement. Allowable range
      is 0 to 20.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      maxWaitTime_Sec

          Variable Type       ViInt16

          Pass the maximum wait time in seconds for the settled API (SD)
          reading. The valid range for the maximum angle settle time is 0 to
          20.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDRatio

      ViStatus na65cs3_config_SDRatio (ViSession vi, ViInt16 channel,
                                       ViInt16 ratio);

  Purpose

      This function sets the measurement channel 2-speed/Multi-speed ratio for
      EVEN channels only. The ratio cannot be set for ODD channels and will be
      ignored. Valid ratio range is 1 to 255.
      
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      ratio

          Variable Type       ViInt16

          Pass the channel 2-speed/multi-speed ratio. The valid range for the
          ratio is 1 to 255.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDRefSrcMode

      ViStatus na65cs3_config_SDRefSrcMode (ViSession vi, ViInt16 channel,
                                            ViInt16 refSourceMode);

  Purpose

      This function sets the measurement channel's reference source to either
      Internal or External. Note, Internal Reference Source for Channels 3 and
      4 is Reference 2.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      refSourceMode

          Variable Type       ViInt16

          Pass the channel reference source. Valid values are:
          
          NA65CS3_INT = 0   (INTERNAL Reference Source)
          NA65CS3_EXT = 1   (EXTERNAL Reference Source)
          
          Note, the internal reference source for Channels 3 and 4 is Reference
          2.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDRelayIOState

      ViStatus na65cs3_config_SDRelayIOState (ViSession vi, ViInt16 channel,
                                              ViInt16 relayIOState);

  Purpose

      This function sets the measurement channel's I/O isolation relay state to
      either Open or Close.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      relayIOState

          Variable Type       ViInt16

          Pass the channel I/O isolation relay state. Valid values are:
          
          NA65CS3_OPEN  = 0  (OPEN relay state)
          NA65CS3_CLOSE = 1  (CLOSE relay state)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDSignalMode

      ViStatus na65cs3_config_SDSignalMode (ViSession vi, ViInt16 channel,
                                            ViInt16 mode);

  Purpose

      This function sets the measurement channel signal format mode to either
      Resolver or Synchro.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      mode

          Variable Type       ViInt16

          Pass the channel signal format mode. Valid values are:
          
          NA65CS3_RESOLVER = 0   (RESOLVER Signal Format Mode)
          NA65CS3_SYNCHRO  = 1   (SYNCHRO Signal Format Mode)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_config_SDUpdateMode

      ViStatus na65cs3_config_SDUpdateMode (ViSession vi, ViInt16 channel,
                                            ViInt16 updateMode);

  Purpose

      This function sets the measurement channel's update mode to either Latch
      or Track.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to configure. Number of Valid Channels are
          based on the Part Number Designation. Valid range of Channel Numbers:
          1 to 4.
          

      updateMode

          Variable Type       ViInt16

          Pass the channel update mode. Valid values are:
          
          NA65CS3_LATCH = 0  (LATCH Update Mode)
          NA65CS3_TRACK = 1  (TRACK Update Mode)
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_Disable

      ViStatus na65cs3_Disable (ViSession instrumentHandle);

  Purpose

      This function places the instrument in a quiescent state where it has
      minimal or no impact on the system to which it is connected.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_error_message

      ViStatus na65cs3_error_message (ViSession instrumentHandle,
                                      ViStatus errorCode,
                                      ViChar _VI_FAR errorMessage[]);

  Purpose

      This function converts a status code returned by an instrument driver
      function into a user-readable string.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          You can pass VI_NULL for this parameter.  This is useful when one of
          the initialize functions fail.
          
          Default Value:  VI_NULL
          

      errorCode

          Variable Type       ViStatus

          Pass the Status parameter that is returned from any of the instrument
          driver functions.
          
          Default Value:  0  (VI_SUCCESS)

      errorMessage

          Variable Type       ViChar[]

          Returns the user-readable message string that corresponds to the
          status code you specify.
          
          You must pass a ViChar array with at least 256 bytes.
          

  Return Value

          Reports the status of this operation.
          
          This function can return only three possible status codes:
          
          Status    Description
          -------------------------------------------------
                 0  No error (the call was successful).
          
          3FFF0085  Unknown status code (warning).
          
          BFFF000A  Invalid parameter (Error Message buffer is VI_NULL).
          
          
________________________________________________________________________________

  na65cs3_error_query

      ViStatus na65cs3_error_query (ViSession instrumentHandle,
                                    ViPInt32 errorCode,
                                    ViChar _VI_FAR errorMessage[]);

  Purpose

      This function reads an error code and a message from the instrument's
      error queue.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      errorCode

          Variable Type       ViInt32 (passed by reference)

          Returns the error code read from the instrument's error queue.
          
          

      errorMessage

          Variable Type       ViChar[]

          Returns the error message string read from the instrument's error
          message queue.
          
          You must pass a ViChar array with at least 256 bytes.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_find

      ViStatus na65cs3_find (NA65CS3Found *na65CS3inSystem, ViPInt16 cnt);

  Purpose

      This function finds all 65CS3 in the sytem and stores the resource name,
      slot, logic address and model code in a na65CS3Found structure. Before
      calling this function you must allocate an array of these structures as
      large as the possible number of 65CS3s expected in your system.
      

  Parameter List

      na65CS3inSystem

          Variable Type       NA65CS3Found (passed by reference)

          Pass a pointer to an array of NA65CS3Found structures that is
          allocated with the possible number of 65CS3s expected in your system.
          The function will populate the structure with information about the
          NA65CS3 devices that are found in your system.
          

      cnt

          Variable Type       ViInt16 (passed by reference)

          Pass a pointer to a ViInt16 variable. The function return the number
          of NA65CS3 devices that are found in your system.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_get_DSRotationComplete

      ViStatus na65cs3_get_DSRotationComplete (ViSession vi, ViInt16 channel,
                                               ViInt16 channelGrade,
                                               ViPBoolean rotationComplete);

  Purpose

      This function returns the Step Rotation Status.  This only applies when
      in Step Rotation Mode.  This function will set the Rotation_Complete
      variable to VI_TRUE if the Step Rotation is Done, otherwise it will
      return VI_FALSE.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the stimulus channel number to query. Number of Valid Channels
          are based on the Part Number Designation. Valid range of Channel
          Numbers: 1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationComplete

          Variable Type       ViBoolean (passed by reference)

          Returns VI_TRUE if the Step Rotation is Done, otherwise returns
          VI_FALSE.
________________________________________________________________________________

  na65cs3_GetAttributeViBoolean

      ViStatus na65cs3_GetAttributeViBoolean (ViSession instrumentHandle,
                                              ViChar _VI_FAR channelName[],
                                              ViAttr attributeID,
                                              ViPBoolean attributeValue);

  Purpose

      This function queries the value of a ViBoolean attribute.
      
      You can use this function to get the values of instrument- specific
      attributes and inherent IVI attributes.  If the attribute represents an
      instrument state, this function performs instrument I/O in the following
      cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to obtain the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Help text is
            shown for each attribute.  Select an attribute by
            double-clicking on it or by selecting it and then pressing
            <ENTER>.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViBoolean
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViBoolean are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViBoolean (passed by reference)

          Returns the current value of the attribute.  Pass the address of a
          ViBoolean variable.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has named constants as valid values, you can view a
            list of the constants by pressing <ENTER> on this control.
            Select a value by double-clicking on it or by selecting it and
            then pressing <ENTER>.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_GetAttributeViInt32

      ViStatus na65cs3_GetAttributeViInt32 (ViSession instrumentHandle,
                                            ViChar _VI_FAR channelName[],
                                            ViAttr attributeID,
                                            ViPInt32 attributeValue);

  Purpose

      This function queries the value of a ViInt32 attribute.
      
      You can use this function to get the values of instrument- specific
      attributes and inherent IVI attributes.  If the attribute represents an
      instrument state, this function performs instrument I/O in the following
      cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to obtain the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Help text is
            shown for each attribute.  Select an attribute by
            double-clicking on it or by selecting it and then pressing
            <ENTER>.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViInt32 type.
            If you choose to see all IVI attributes, the data types appear
            to the right of the attribute names in the list box.
            Attributes with data types other than ViInt32 are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViInt32 (passed by reference)

          Returns the current value of the attribute.  Pass the address of a
          ViInt32 variable.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has named constants as valid values, you can view a
            list of the constants by pressing <ENTER> on this control.
            Select a value by double-clicking on it or by selecting it and
            then pressing <ENTER>.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_GetAttributeViReal64

      ViStatus na65cs3_GetAttributeViReal64 (ViSession instrumentHandle,
                                             ViChar _VI_FAR channelName[],
                                             ViAttr attributeID,
                                             ViPReal64 attributeValue);

  Purpose

      This function queries the value of a ViReal64 attribute.
      
      You can use this function to get the values of instrument- specific
      attributes and inherent IVI attributes.  If the attribute represents an
      instrument state, this function performs instrument I/O in the following
      cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to obtain the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Help text is
            shown for each attribute.  Select an attribute by
            double-clicking on it or by selecting it and then pressing
            <ENTER>.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViReal64
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViReal64 are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViReal64 (passed by reference)

          Returns the current value of the attribute.  Pass the address of a
          ViReal64 variable.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has named constants as valid values, you can view a
            list of the constants by pressing <ENTER> on this control.
            Select a value by double-clicking on it or by selecting it and
            then pressing <ENTER>.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_GetAttributeViSession

      ViStatus na65cs3_GetAttributeViSession (ViSession instrumentHandle,
                                              ViChar _VI_FAR channelName[],
                                              ViAttr attributeID,
                                              ViPSession attributeValue);

  Purpose

      This function queries the value of a ViSession attribute.
      
      You can use this function to get the values of instrument- specific
      attributes and inherent IVI attributes.  If the attribute represents an
      instrument state, this function performs instrument I/O in the following
      cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to obtain the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Help text is
            shown for each attribute.  Select an attribute by
            double-clicking on it or by selecting it and then pressing
            <ENTER>.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViSession
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViSession are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViSession (passed by reference)

          Returns the current value of the attribute.  Pass the address of a
          ViSession variable.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has named constants as valid values, you can view a
            list of the constants by pressing <ENTER> on this control.
            Select a value by double-clicking on it or by selecting it and
            then pressing <ENTER>.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_GetAttributeViString

      ViStatus na65cs3_GetAttributeViString (ViSession instrumentHandle,
                                             ViChar _VI_FAR channelName[],
                                             ViAttr attributeID,
                                             ViInt32 bufferSize,
                                             ViChar _VI_FAR attributeValue[]);

  Purpose

      This function queries the value of a ViString attribute.
      
      You can use this function to get the values of instrument- specific
      attributes and inherent IVI attributes.  If the attribute represents an
      instrument state, this function performs instrument I/O in the following
      cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid.
      
      You must provide a ViChar array to serve as a buffer for the value.  You
      pass the number of bytes in the buffer as the Buffer Size parameter.  If
      the current value of the attribute, including the terminating NUL byte,
      is larger than the size you indicate in the Buffer Size parameter, the
      function copies Buffer Size - 1 bytes into the buffer, places an ASCII
      NUL byte at the end of the buffer, and returns the buffer size you must
      pass to get the entire value.  For example, if the value is "123456" and
      the Buffer Size is 4, the function places "123" into the buffer and
      returns 7.
      
      If you want to call this function just to get the required buffer size,
      you can pass 0 for the Buffer Size and VI_NULL for the Attribute Value
      buffer.
      
      If you want the function to fill in the buffer regardless of the   number
      of bytes in the value, pass a negative number for the Buffer Size
      parameter.
      
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to obtain the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Help text is
            shown for each attribute.  Select an attribute by
            double-clicking on it or by selecting it and then pressing
            <ENTER>.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViString
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViString are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      bufferSize

          Variable Type       ViInt32

          Pass the number of bytes in the ViChar array you specify for the
          Attribute Value parameter.
          
          If the current value of the attribute, including the terminating NUL
          byte, contains more bytes that you indicate in this parameter, the
          function copies Buffer Size - 1 bytes into the buffer, places an
          ASCII NUL byte at the end of the buffer, and returns the buffer size
          you must pass to get the entire value.  For example, if the value is
          "123456" and the Buffer Size is 4, the function places "123" into the
          buffer and returns 7.
          
          If you pass a negative number, the function copies the value to the
          buffer regardless of the number of bytes in the value.
          
          If you pass 0, you can pass VI_NULL for the Attribute Value buffer
          parameter.
          

      attributeValue

          Variable Type       ViChar[]

          The buffer in which the function returns the current value of the
          attribute.  The buffer must be of type ViChar and have at least as
          many bytes as indicated in the Buffer Size parameter.
          
          If the current value of the attribute, including the terminating NUL
          byte, contains more bytes that you indicate in this parameter, the
          function copies Buffer Size - 1 bytes into the buffer, places an
          ASCII NUL byte at the end of the buffer, and returns the buffer size
          you must pass to get the entire value.  For example, if the value is
          "123456" and the Buffer Size is 4, the function places "123" into the
          buffer and returns 7.
          
          If you specify 0 for the Buffer Size parameter, you can pass VI_NULL
          for this parameter.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has named constants as valid values, you can view a
            list of the constants by pressing <ENTER> on this control.
            Select a value by double-clicking on it or by selecting it and
            then pressing <ENTER>.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          If the current value of the return buffer, including the terminating
          NUL byte, is larger than the size you indicate in the Buffer Size
          parameter, the function copies Buffer Size - 1 bytes into the buffer,
          places an ASCII NUL byte at the end of the buffer, and returns the
          buffer size you must pass to get the entire value.  For example, if
          the value is "123456" and the Buffer Size is 4, the function places
          "123" into the buffer and returns 7.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_GetError

      ViStatus na65cs3_GetError (ViSession instrumentHandle, ViPStatus code,
                                 ViInt32 bufferSize,
                                 ViChar _VI_FAR description[]);

  Purpose

      This function retrieves and then clears the IVI error information for the
      session or the current execution thread. One exception exists: If the
      BufferSize parameter is 0, the function does not clear the error
      information. By passing 0 for the buffer size, the caller can ascertain
      the buffer size required to get the entire error description string and
      then call the function again with a sufficiently large buffer.
      
      If the user specifies a valid IVI session for the InstrumentHandle
      parameter, Get Error retrieves and then clears the error information for
      the session.  If the user passes VI_NULL for the InstrumentHandle
      parameter, this function retrieves and then clears the error information
      for the current execution thread.  If the InstrumentHandle parameter is
      an invalid session, the function does nothing and returns an error.
      Normally, the error information describes the first error that occurred
      since the user last called na65cs3_GetError or na65cs3_ClearError.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      code

          Variable Type       ViStatus (passed by reference)

          Returns the error code for the session or execution thread.
          
          If you pass 0 for the Buffer Size, you can pass VI_NULL for this
          parameter.
          

      bufferSize

          Variable Type       ViInt32

          Pass the number of bytes in the ViChar array you specify for the
          Description parameter.
          
          If the error description, including the terminating NUL byte,
          contains more bytes than you indicate in this parameter, the function
          copies BufferSize - 1 bytes into the buffer, places an ASCII NUL byte
          at the end of the buffer, and returns the buffer size you must pass
          to get the entire value.  For example, if the value is "123456" and
          the Buffer Size is 4, the function places "123" into the buffer and
          returns 7.
          
          If you pass a negative number, the function copies the value to the
          buffer regardless of the number of bytes in the value.
          
          If you pass 0, you can pass VI_NULL for the Description buffer
          parameter.
          
          Default Value:  None

      description

          Variable Type       ViChar[]

          Returns the error description for the IVI session or execution
          thread.  If there is no description, the function returns an empty
          string.
          
          The buffer must contain at least as many elements as the value you
          specify with the Buffer Size parameter.  If the error description,
          including the terminating NUL byte, contains more bytes than you
          indicate with the Buffer Size parameter, the function copies Buffer
          Size - 1 bytes into the buffer, places an ASCII NUL byte at the end
          of the buffer, and returns the buffer size you must pass to get the
          entire value.  For example, if the value is "123456" and the Buffer
          Size is 4, the function places "123" into the buffer and returns 7.
          
          If you pass 0 for the Buffer Size, you can pass VI_NULL for this
          parameter.

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          If the current value of the return buffer, including the terminating
          NUL byte, is larger than the size you indicate in the Buffer Size
          parameter, the function copies Buffer Size - 1 bytes into the buffer,
          places an ASCII NUL byte at the end of the buffer, and returns the
          buffer size you must pass to get the entire value.  For example, if
          the value is "123456" and the Buffer Size is 4, the function places
          "123" into the buffer and returns 7.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
________________________________________________________________________________

  na65cs3_getModelInfo

      ViStatus na65cs3_getModelInfo (ViString modelName, ViPInt16 maxSDChan,
                                     ViPInt16 maxRefChan,
                                     ViPInt16 maxDSInstChan,
                                     ViPInt16 maxDSOperChan);

  Purpose

      This function provides information about the maximum number of  SD,
      Reference Generator, Instrument grade and Operation grade   DS channels
      supported by the Model.

  Parameter List

      modelName

          Variable Type       ViString

      maxSDChan

          Variable Type       ViInt16 (passed by reference)

      maxRefChan

          Variable Type       ViInt16 (passed by reference)

      maxDSInstChan

          Variable Type       ViInt16 (passed by reference)

      maxDSOperChan

          Variable Type       ViInt16 (passed by reference)

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_getModelParts

      ViStatus na65cs3_getModelParts (ViString modelName, ViInt16 maxPartCnt,
                                      ViInt16 maxPartLength, ViPInt16 partCnt,
                                      char *supportedParts[]);

  Purpose

      This function provides a list of supported part number designations.

  Parameter List

      modelName

          Variable Type       ViString

      maxPartCnt

          Variable Type       ViInt16

      maxPartLength

          Variable Type       ViInt16

      partCnt

          Variable Type       ViInt16 (passed by reference)

          Pass a pointer to a ViInt16 variable. The function return the number
          of NA65CS3 devices that are found in your system.
          

      supportedParts

          Variable Type       char *[]

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_GetNextCoercionRecord

      ViStatus na65cs3_GetNextCoercionRecord (ViSession instrumentHandle,
                                              ViInt32 bufferSize,
                                              ViChar _VI_FAR coercionRecord[]);

  Purpose

      This function returns the coercion information associated with the IVI
      session.  This function retrieves and clears the oldest instance in which
      the instrument driver coerced a value you specified to another value.
      
      If you set the NA65CS3_ATTR_RECORD_COERCIONS attribute to VI_TRUE, the
      instrument driver keeps a list of all coercions it makes on ViInt32 or
      ViReal64 values you pass to instrument driver functions.  You use this
      function to retrieve information from that list.
      
      If the next coercion record string, including the terminating NUL byte,
      contains more bytes than you indicate in this parameter, the function
      copies Buffer Size - 1 bytes into the buffer, places an ASCII NUL byte at
      the end of the buffer, and returns the buffer size you must pass to get
      the entire value.  For example, if the value is "123456" and the Buffer
      Size is 4, the function places "123" into the buffer and returns 7.
      
      If you pass a negative number, the function copies the value to the
      buffer regardless of the number of bytes in the value.
      
      If you pass 0, you can pass VI_NULL for the Coercion Record buffer
      parameter.
      
      The function returns an empty string in the Coercion Record parameter if
      no coercion records remain for the session.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init function.
          The handle identifies a particular instrument session.
          
          Default Value:  None

      bufferSize

          Variable Type       ViInt32

          Pass the number of bytes in the ViChar array you specify for the
          Coercion Record parameter.
          
          If the next coercion record string, including the terminating NUL
          byte, contains more bytes than you indicate in this parameter, the
          function copies Buffer Size - 1 bytes into the buffer, places an
          ASCII NUL byte at the end of the buffer, and returns the buffer size
          you must pass to get the entire value.  For example, if the value is
          "123456" and the Buffer Size is 4, the function places "123" into the
          buffer and returns 7.
          
          If you pass a negative number, the function copies the value to the
          buffer regardless of the number of bytes in the value.
          
          If you pass 0, you can pass VI_NULL for the Coercion Record buffer
          parameter.
          
          Default Value:  None
          
          

      coercionRecord

          Variable Type       ViChar[]

          Returns the next coercion record for the IVI session.  If there are
          no coercion records, the function returns an empty string.
          
          The buffer must contain at least as many elements as the value you
          specify with the Buffer Size parameter.  If the next coercion record
          string, including the terminating NUL byte, contains more bytes than
          you indicate with the Buffer Size parameter, the function copies
          Buffer Size - 1 bytes into the buffer, places an ASCII NUL byte at
          the end of the buffer, and returns the buffer size you must pass to
          get the entire value.  For example, if the value is "123456" and the
          Buffer Size is 4, the function places "123" into the buffer and
          returns 7.
          
          This parameter returns an empty string if no coercion records remain
          for the session.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          If the current value of the return buffer, including the terminating
          NUL byte, is larger than the size you indicate in the Buffer Size
          parameter, the function copies Buffer Size - 1 bytes into the buffer,
          places an ASCII NUL byte at the end of the buffer, and returns the
          buffer size you must pass to get the entire value.  For example, if
          the value is "123456" and the Buffer Size is 4, the function places
          "123" into the buffer and returns 7.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
________________________________________________________________________________

  na65cs3_GetNextInterchangeWarning

      ViStatus na65cs3_GetNextInterchangeWarning (ViSession instrumentHandle,
                                                  ViInt32 bufferSize,
                                                  ViChar _VI_FAR interchangeWarning[]);

  Purpose

      This function returns the interchangeability warnings associated with the
      IVI session. It retrieves and clears the oldest instance in which the
      class driver recorded an interchangeability warning.  Interchangeability
      warnings indicate that using your application with a different instrument
      might cause different behavior. You use this function to retrieve
      interchangeability warnings.
      
      The driver performs interchangeability checking when the
      NA65CS3_ATTR_INTERCHANGE_CHECK attribute is set to VI_TRUE.
      
      The function returns an empty string in the Interchange Warning parameter
      if no interchangeability warnings remain for the session.
      
      In general, the instrument driver generates interchangeability warnings
      when an attribute that affects the behavior of the instrument is in a
      state that you did not specify.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      bufferSize

          Variable Type       ViInt32

          Pass the number of bytes in the ViChar array you specify for the
          Interchange Warning parameter.
          
          If the next interchangeability warning string, including the
          terminating NUL byte, contains more bytes than you indicate in this
          parameter, the function copies Buffer Size - 1 bytes into the buffer,
          places an ASCII NUL byte at the end of the buffer, and returns the
          buffer size you must pass to get the entire value. For example, if
          the value is "123456" and the Buffer Size is 4, the function places
          "123" into the buffer and returns 7.
          
          If you pass a negative number, the function copies the value to the
          buffer regardless of the number of bytes in the value.
          
          If you pass 0, you can pass VI_NULL for the Interchange Warning
          buffer parameter.
          
          Default Value:  None
          

      interchangeWarning

          Variable Type       ViChar[]

          Returns the next interchange warning for the IVI session. If there
          are no interchange warnings, the function returns an empty  string.
          
          The buffer must contain at least as many elements as the value you
          specify with the Buffer Size parameter. If the next
          interchangeability warning string, including the terminating NUL
          byte, contains more bytes than you indicate with the Buffer Size
          parameter, the function copies Buffer Size - 1 bytes into the buffer,
          places an ASCII NUL byte at the end of the buffer, and returns the
          buffer size you must pass to get the entire value.  For example, if
          the value is "123456" and the Buffer Size is 4, the function places
          "123" into the buffer and returns 7.
          
          This parameter returns an empty string if no interchangeability
          warnings remain for the session.
          
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          If the current value of the return buffer, including the terminating
          NUL byte, is larger than the size you indicate in the Buffer Size
          parameter, the function copies Buffer Size - 1 bytes into the buffer,
          places an ASCII NUL byte at the end of the buffer, and returns the
          buffer size you must pass to get the entire value.  For example, if
          the value is "123456" and the Buffer Size is 4, the function places
          "123" into the buffer and returns 7.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
________________________________________________________________________________

  na65cs3_getPartSpecInfo

      ViStatus na65cs3_getPartSpecInfo (ViString partSpecification,
                                        ViPInt16 numSDChan,
                                        ViPInt16 numDSInstChan,
                                        ViPInt16 numDSOperChan,
                                        ViPInt16 numRefChan,
                                        ViPReal64 minRefFreq,
                                        ViPReal64 maxRefFreq,
                                        ViPReal64 ref1PowerOutput,
                                        ViPReal64 ref1MinVolt,
                                        ViPReal64 ref1MaxVolt,
                                        ViPReal64 ref2PowerOutput,
                                        ViPReal64 ref2MinVolt,
                                        ViPReal64 ref2MaxVolt,
                                        ViPInt16 langInterface);

  Purpose

      This function will return the specifications for the number of
      measurement (S/D) channels, the number of instrument-grade stimulus (D/S)
      channels, the number of operational-grade stimulus (D/S) channels, the
      number of reference channels, the
      frequency range for the reference channels, the reference output for
      Reference 1 and Reference 2, and the supported language interface for a
      given part specification.
      

  Parameter List

      partSpecification

          Variable Type       ViString

      numSDChan

          Variable Type       ViInt16 (passed by reference)

      numDSInstChan

          Variable Type       ViInt16 (passed by reference)

      numDSOperChan

          Variable Type       ViInt16 (passed by reference)

      numRefChan

          Variable Type       ViInt16 (passed by reference)

      minRefFreq

          Variable Type       ViReal64 (passed by reference)

      maxRefFreq

          Variable Type       ViReal64 (passed by reference)

      ref1PowerOutput

          Variable Type       ViReal64 (passed by reference)

      ref1MinVolt

          Variable Type       ViReal64 (passed by reference)

      ref1MaxVolt

          Variable Type       ViReal64 (passed by reference)

      ref2PowerOutput

          Variable Type       ViReal64 (passed by reference)

      ref2MinVolt

          Variable Type       ViReal64 (passed by reference)

      ref2MaxVolt

          Variable Type       ViReal64 (passed by reference)

      langInterface

          Variable Type       ViInt16 (passed by reference)

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_init

      ViStatus na65cs3_init (ViRsrc resourceName, ViBoolean IDQuery,
                             ViBoolean reset, ViPSession instrumentHandle);

  Purpose

      This function performs the following initialization actions:
      
      - Creates a new IVI instrument driver session.
      
      - Opens a session to the specified device using the interface and address
      you specify for the resourceName parameter.
      
      - If the IDQuery parameter is set to VI_TRUE, this function queries the
      instrument ID and checks that it is valid for this instrument driver.
      
      - If the reset parameter is set to VI_TRUE, this function resets the
      instrument to a known state.
      
      - Sends initialization commands to set the instrument to the state
      necessary for the operation of the instrument driver.
      
      - Returns a ViSession handle that you use to identify the instrument in
      all subsequent instrument driver function calls.
      
      Note:  This function creates a new session each time you invoke it.
      Although you can open more than one IVI session for the same resource, it
      is best not to do so.  You can use the same session in multiple program
      threads.  You can use the na65cs3_LockSession and na65cs3_UnlockSession
      functions to protect sections of code that require exclusive access to
      the resource.
      
      

  Parameter List

      resourceName

          Variable Type       ViRsrc

          Pass the resource name of the device to initialize.
          
          You can also pass the name of a driver session or logical name that
          you configure with the IVI Configuration utility.  The driver session
          identifies a specific device and specifies the initial settings for
          the session.  A logical Name identifies a particular driver session.
          
          Refer to the following table below for the exact grammar to use for
          this parameter.  Optional fields are shown in square brackets ([]).
          
          Syntax
          ------------------------------------------------------
          GPIB[board]::<primary address>[::secondary address]::INSTR
          VXI[board]::<logical address>::INSTR
          GPIB-VXI[board]::<logical address>::INSTR
          ASRL<port>::INSTR
          <LogicalName>
          <Driver Session>
          
          If you do not specify a value for an optional field, the following
          values are used:
          
          Optional Field - Value
          ------------------------------------------------------
          board - 0
          secondary address - none (31)
          
          The following table contains example valid values for this parameter.
          
          "Valid Value" - Description
          ------------------------------------------------------
          "GPIB::22::INSTR" - GPIB board 0, primary address 22 no
                              secondary address
          "GPIB::22::5::INSTR" - GPIB board 0, primary address 22
                                 secondary address 5
          "GPIB1::22::5::INSTR" - GPIB board 1, primary address 22
                                  secondary address 5
          "VXI::64::INSTR" - VXI board 0, logical address 64
          "VXI1::64::INSTR" - VXI board 1, logical address 64
          "GPIB-VXI::64::INSTR" - GPIB-VXI board 0, logical address 64
          "GPIB-VXI1::64::INSTR" - GPIB-VXI board 1, logical address 64
          "ASRL2::INSTR" - COM port 2
          "SampleInstr" - Logical name "SampleInstr"
          "xyz432" - Logical Name or Driver Session "xyz432"
          
          /*=CHANGE:===================================================*
          
          Modify the following default value so that it reflects the default
          address for your instrument.  You must make the corresponding change
          to the Default Value entry for the control.
          
           *================================================END=CHANGE=*/
          Default Value:  "VXI::14::INSTR"
          
          

      IDQuery

          Variable Type       ViBoolean

          Specify whether you want the instrument driver to perform an ID
          Query.
          
          Valid Range:
          VI_TRUE  (1) - Perform ID Query (Default Value)
          VI_FALSE (0) - Skip ID Query
          
          When you set this parameter to VI_TRUE, the driver verifies that the
          instrument you initialize is a type that this driver supports.
          
          Circumstances can arise where it is undesirable to send an ID Query
          command string to the instrument.  When you set this parameter to
          VI_FALSE, the function initializes the instrument without performing
          an ID Query.

      reset

          Variable Type       ViBoolean

          Specify whether you want the to reset the instrument during the
          initialization procedure.
          
          Valid Range:
          VI_TRUE  (1) - Reset Device (Default Value)
          VI_FALSE (0) - Don't Reset
          
          

      instrumentHandle

          Variable Type       ViSession (passed by reference)

          Returns a ViSession handle that you use to identify the instrument in
          all subsequent instrument driver function calls.
          
          Notes:
          
          (1) This function creates a new session each time you invoke it.
          This is useful if you have multiple physical instances of the same
          type of instrument.
          
          (2) Avoid creating multiple concurrent sessions to the same physical
          instrument.  Although you can create more than one IVI session for
          the same resource, it is best not to do so.  A better approach is to
          use the same IVI session in multiple execution threads.  You can use
          functions na65cs3_LockSession and na65cs3_UnlockSession to protect
          sections of code that require exclusive access to the resource.
          
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
________________________________________________________________________________

  na65cs3_initiate_DSRotation

      ViStatus na65cs3_initiate_DSRotation (ViSession vi, ViInt16 channel,
                                            ViInt16 channelGrade);

  Purpose

      This function initiates the rotation of the channel output.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the stimulus channel number to initiate rotation. Number of
          Valid Channels are based on the Part Number Designation. Valid range
          of Channel Numbers: 1 to 4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          
________________________________________________________________________________

  na65cs3_InitWithOptions

      ViStatus na65cs3_InitWithOptions (ViRsrc resourceName,
                                        ViBoolean IDQuery, ViBoolean reset,
                                        ViString optionString,
                                        ViPSession instrumentHandle);

  Purpose

      This function performs the following initialization actions:
      
      - Creates a new IVI instrument driver and optionally sets the initial
      state of the following session attributes:
      
          NA65CS3_ATTR_RANGE_CHECK
          NA65CS3_ATTR_QUERY_INSTRUMENT_STATUS
          NA65CS3_ATTR_CACHE
          NA65CS3_ATTR_SIMULATE
          NA65CS3_ATTR_RECORD_COERCIONS
      
      - Opens a session to the specified device using the interface and address
      you specify for the Resource Name parameter.
      
      - If the ID Query parameter is set to VI_TRUE, this function queries the
      instrument ID and checks that it is valid for this instrument driver.
      
      - If the Reset parameter is set to VI_TRUE, this function resets the
      instrument to a known state.
      
      - Sends initialization commands to set the instrument to the state
      necessary for the operation of the instrument driver.
      
      - Returns a ViSession handle that you use to identify the instrument in
      all subsequent instrument driver function calls.
      
      Note:  This function creates a new session each time you invoke it.
      Although you can open more than one IVI session for the same resource, it
      is best not to do so.  You can use the same session in multiple program
      threads.  You can use the na65cs3_LockSession and na65cs3_UnlockSession
      functions to protect sections of code that require exclusive access to
      the resource.
      
      

  Parameter List

      resourceName

          Variable Type       ViRsrc

          Pass the resource name of the device to initialize.
          
          You can also pass the name of a driver session or logical name that
          you configure with the IVI Configuration utility.  The driver session
          identifies a specific device and specifies the initial settings for
          the session.  A logical Name identifies a particular driver session.
          
          Refer to the following table below for the exact grammar to use for
          this parameter.  Optional fields are shown in square brackets ([]).
          
          Syntax
          ------------------------------------------------------
          GPIB[board]::<primary address>[::secondary address]::INSTR
          VXI[board]::<logical address>::INSTR
          GPIB-VXI[board]::<logical address>::INSTR
          ASRL<port>::INSTR
          <LogicalName>
          <Driver Session>
          
          If you do not specify a value for an optional field, the following
          values are used:
          
          Optional Field - Value
          ------------------------------------------------------
          board - 0
          secondary address - none (31)
          
          The following table contains example valid values for this parameter.
          
          "Valid Value" - Description
          ------------------------------------------------------
          "GPIB::22::INSTR" - GPIB board 0, primary address 22 no
                              secondary address
          "GPIB::22::5::INSTR" - GPIB board 0, primary address 22
                                 secondary address 5
          "GPIB1::22::5::INSTR" - GPIB board 1, primary address 22
                                  secondary address 5
          "VXI::64::INSTR" - VXI board 0, logical address 64
          "VXI1::64::INSTR" - VXI board 1, logical address 64
          "GPIB-VXI::64::INSTR" - GPIB-VXI board 0, logical address 64
          "GPIB-VXI1::64::INSTR" - GPIB-VXI board 1, logical address 64
          "ASRL2::INSTR" - COM port 2
          "SampleInstr" - Logical name "SampleInstr"
          "xyz432" - Logical Name or Driver Session "xyz432"
          
          /*=CHANGE:===================================================*
          
          Modify the following default value so that it reflects the default
          address for your instrument.  You must make the corresponding change
          to the Default Value entry for the control.
          
           *================================================END=CHANGE=*/
          Default Value:  "VXI::14::INSTR"
          
          

      IDQuery

          Variable Type       ViBoolean

          Specify whether you want the instrument driver to perform an ID
          Query.
          
          Valid Range:
          VI_TRUE  (1) - Perform ID Query (Default Value)
          VI_FALSE (0) - Skip ID Query
          
          When you set this parameter to VI_TRUE, the driver verifies that the
          instrument you initialize is a type that this driver supports.
          
          Circumstances can arise where it is undesirable to send an ID Query
          command string to the instrument.  When you set this parameter to
          VI_FALSE, the function initializes the instrument without performing
          an ID Query.

      reset

          Variable Type       ViBoolean

          Specify whether you want the to reset the instrument during the
          initialization procedure.
          
          Valid Range:
          VI_TRUE  (1) - Reset Device (Default Value)
          VI_FALSE (0) - Don't Reset
          
          

      optionString

          Variable Type       ViString

          You can use this control to set the initial value of certain
          attributes for the session.  The following table lists the attributes
          and the name you use in this parameter to identify the attribute.
          
          Name              Attribute Defined Constant
          --------------------------------------------
          RangeCheck        NA65CS3_ATTR_RANGE_CHECK
          QueryInstrStatus  NA65CS3_ATTR_QUERY_INSTRUMENT_STATUS
          Cache             NA65CS3_ATTR_CACHE
          Simulate          NA65CS3_ATTR_SIMULATE
          RecordCoercions   NA65CS3_ATTR_RECORD_COERCIONS
          
          The format of this string is, "AttributeName=Value" where
          AttributeName is the name of the attribute and Value is the value to
          which the attribute will be set.  To set multiple attributes,
          separate their assignments with a comma.
          
          If you pass NULL or an empty string for this parameter, the session
          uses the default values for the attributes.   You can override the
          default values by assigning a value explicitly in a string you pass
          for this parameter.  You do not have to specify all of the attributes
          and may leave any of them out.  If you do not specify one of the
          attributes, its default value will be used.
          
          The default values for the attributes are shown below:
          
              Attribute Name     Default Value
              ----------------   -------------
              RangeCheck         VI_TRUE
              QueryInstrStatus   VI_FALSE
              Cache              VI_TRUE
              Simulate           VI_FALSE
              RecordCoercions    VI_FALSE
          
          
          The following are the valid values for ViBoolean attributes:
          
              True:     1, True, or VI_TRUE
              False:    0, False, or VI_FALSE
          
          
          Default Value:
                 "Simulate=0,RangeCheck=1,QueryInstrStatus=0,Cache=1"
          

      instrumentHandle

          Variable Type       ViSession (passed by reference)

          Returns a ViSession handle that you use to identify the instrument in
          all subsequent instrument driver function calls.
          
          Notes:
          
          (1) This function creates a new session each time you invoke it.
          This is useful if you have multiple physical instances of the same
          type of instrument.
          
          (2) Avoid creating multiple concurrent sessions to the same physical
          instrument.  Although you can create more than one IVI session for
          the same resource, it is best not to do so.  A better approach is to
          use the same IVI session in multiple execution threads.  You can use
          functions na65cs3_LockSession and na65cs3_UnlockSession to protect
          sections of code that require exclusive access to the resource.
          
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_InvalidateAllAttributes

      ViStatus na65cs3_InvalidateAllAttributes (ViSession instrumentHandle);

  Purpose

      This function invalidates the cached values of all attributes for the
      session.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_LockSession

      ViStatus na65cs3_LockSession (ViSession instrumentHandle,
                                    ViPBoolean callerHasLock);

  Purpose

      This function obtains a multithread lock on the instrument session.
      Before it does so, it waits until all other execution threads have
      released their locks on the instrument session.
      
      Other threads might have obtained a lock on this session in the following
      ways:
      
      - The user's application called na65cs3_LockSession.
      
      - A call to the instrument driver locked the session.
      
      - A call to the IVI engine locked the session.
      
      After your call to na65cs3_LockSession returns successfully, no other
      threads can access the instrument session until you call
      na65cs3_UnlockSession.
      
      Use na65cs3_LockSession and na65cs3_UnlockSession around a sequence of
      calls to instrument driver functions if you require that the instrument
      retain its settings through the end of the sequence.
      
      You can safely make nested calls to na65cs3_LockSession within the same
      thread.  To completely unlock the session, you must balance each call to
      na65cs3_LockSession with a call to na65cs3_UnlockSession.  If, however,
      you use the Caller Has Lock parameter in all calls to na65cs3_LockSession
      and na65cs3_UnlockSession within a function, the IVI Library locks the
      session only once within the function regardless of the number of calls
      you make to na65cs3_LockSession.  This allows you to call
      na65cs3_UnlockSession just once at the end of the function.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      callerHasLock

          Variable Type       ViBoolean (passed by reference)

          This parameter serves as a convenience.  If you do not want to use
          this parameter, pass VI_NULL.
          
          Use this parameter in complex functions to keep track of whether you
          obtain a lock and therefore need to unlock the session.  Pass the
          address of a local ViBoolean variable.  In the declaration of the
          local variable, initialize it to VI_FALSE.  Pass the address of the
          same local variable to any other calls you make to
          na65cs3_LockSession or na65cs3_UnlockSession in the same function.
          
          The parameter is an input/output parameter.  na65cs3_LockSession and
          na65cs3_UnlockSession each inspect the current value and take the
          following actions:
          
          - If the value is VI_TRUE, na65cs3_LockSession does not lock the
          session again.  If the value is VI_FALSE, na65cs3_LockSession obtains
          the lock and sets the value of the parameter to VI_TRUE.
          
          - If the value is VI_FALSE, na65cs3_UnlockSession does not attempt to
          unlock the session.  If the value is VI_TRUE, na65cs3_UnlockSession
          releases the lock and sets the value of the parameter to VI_FALSE.
          
          Thus, you can, call na65cs3_UnlockSession at the end of your function
          without worrying about whether you actually have the lock.
          
          Example:
          
          ViStatus TestFunc (ViSession vi, ViInt32 flags)
          {
              ViStatus error = VI_SUCCESS;
              ViBoolean haveLock = VI_FALSE;
          
              if (flags & BIT_1)
                  {
                  viCheckErr( na65cs3_LockSession(vi, &haveLock));
                  viCheckErr( TakeAction1(vi));
                  if (flags & BIT_2)
                      {
                      viCheckErr( na65cs3_UnlockSession(vi, &haveLock));
                      viCheckErr( TakeAction2(vi));
                      viCheckErr( na65cs3_LockSession(vi, &haveLock);
                      }
                  if (flags & BIT_3)
                      viCheckErr( TakeAction3(vi));
                  }
          
          Error:
              /*
                 At this point, you cannot really be sure that
                 you have the lock.  Fortunately, the haveLock
                 variable takes care of that for you.
              */
              na65cs3_UnlockSession(vi, &haveLock);
              return error;
          }

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_query_DSAngle

      ViStatus na65cs3_query_DSAngle (ViSession vi, ViInt16 channel,
                                      ViInt16 channelGrade, ViPReal64 angle);

  Purpose

      This function returns the measurement channel angle position in degrees.
      The range returned for the angle position is 0 to 359.999.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      angle

          Variable Type       ViReal64 (passed by reference)

          Returns the angle position in degrees. The range returned for angle
          position is 0 to 359.999.
          
________________________________________________________________________________

  na65cs3_query_DSDCScale

      ViStatus na65cs3_query_DSDCScale (ViSession vi, ViInt16 channel,
                                        ViInt16 channelGrade,
                                        ViPInt16 DCScale);

  Purpose

      This function returns the measurement channel DC Scale value. The range
      returned for the DC Scale is 100 to 1000.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      DCScale

          Variable Type       ViInt16 (passed by reference)

          Returns the channel DC scale value. The range returned for the DC
          scale is 100 to 1000.
________________________________________________________________________________

  na65cs3_query_DSInputRefVolt

      ViStatus na65cs3_query_DSInputRefVolt (ViSession vi, ViInt16 channel,
                                             ViInt16 channelGrade,
                                             ViPReal64 inputRefVoltage_V);

  Purpose

      This function returns the channel input reference voltage in Volts. This
      does not apply when the channel reference source is internal. The  range
      returned for the input reference voltage is 2 to 115 volts if the channel
      reference source is external, otherwise 0 volts is returned.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      inputRefVoltage_V

          Variable Type       ViReal64 (passed by reference)

          Returns the channel input reference voltage in Volts. This does not
          apply when the channel reference source is internal. The  range
          returned for the input reference voltage is 2 to 115 volts if the
          channel reference source is external, otherwise 0 volts is returned.
________________________________________________________________________________

  na65cs3_query_DSLineToLineVoltage

      ViStatus na65cs3_query_DSLineToLineVoltage (ViSession vi,
                                                  ViInt16 channel,
                                                  ViInt16 channelGrade,
                                                  ViPReal64 line_toLineVoltage);

  Purpose

      This function returns the channel line-to-line voltage in Volts. The
      range returned for the line-to-line voltage is 1 to 90 volts.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      line_toLineVoltage

          Variable Type       ViReal64 (passed by reference)

          Returns the channel line-to-line voltage in Volts. The range returned
          for the line-to-line voltage is 1 to 90 volts.
________________________________________________________________________________

  na65cs3_query_DSPhaseShift

      ViStatus na65cs3_query_DSPhaseShift (ViSession vi, ViInt16 channel,
                                           ViInt16 channelGrade,
                                           ViPReal64 phaseShift);

  Purpose

      This function returns the channel phase shift in degrees. The range
      returned for the phase shift is -179.9 to 179.9 degrees.
      
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      phaseShift

          Variable Type       ViReal64 (passed by reference)

          Returns the channel phase shift in degrees. The range returned for
          the phase shift is -179.9 to 179.9 degrees.
          
          
________________________________________________________________________________

  na65cs3_query_DSRatio

      ViStatus na65cs3_query_DSRatio (ViSession vi, ViInt16 channel,
                                      ViInt16 channelGrade, ViPInt16 ratio);

  Purpose

      This function returns the stimulus channel
      one-speed/two-speed/multi-speed ratio setting. The range returned for the
      ratio is 1 to 255 for EVEN channels, 1 if an ODD channel is specified.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      ratio

          Variable Type       ViInt16 (passed by reference)

          Returns the channel one-speed/two-speed/multi-speed ratio setting.
          The range returned for the ratio is 1 to 255 for EVEN channels, 1 if
          an ODD channel is specified.
          
________________________________________________________________________________

  na65cs3_query_DSRefSrcMode

      ViStatus na65cs3_query_DSRefSrcMode (ViSession vi, ViInt16 channel,
                                           ViInt16 channelGrade,
                                           ViPInt16 refSourceMode);

  Purpose

      This function returns the stimulus reference source setting.
      The possible return values are:
      
      NA65CS3_INT = 0   (INTERNAL Reference Source)
      NA65CS3_EXT = 1   (EXTERNAL Reference Source)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      refSourceMode

          Variable Type       ViInt16 (passed by reference)

          Returns the channel reference source. Possible return values are:
          
          NA65CS3_INT = 0   (INTERNAL Reference Source)
          NA65CS3_EXT = 1   (EXTERNAL Reference Source)
          
________________________________________________________________________________

  na65cs3_query_DSRelayIOState

      ViStatus na65cs3_query_DSRelayIOState (ViSession vi, ViInt16 channel,
                                             ViInt16 channelGrade,
                                             ViPInt16 relayIOState);

  Purpose

      This function returns the stimulus channel relay I/O state.
      The possible return values are:
      
      NA65CS3_OPEN  = 0   (OPENED relay status)
      NA65CS3_CLOSE = 1   (CLOSED relay status)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      relayIOState

          Variable Type       ViInt16 (passed by reference)

          Returns the channel relay IO state. Possible return values are:
          
          NA65CS3_OPEN  = 0   (OPENED relay status)
          NA65CS3_CLOSE = 1   (CLOSED relay status)
          
________________________________________________________________________________

  na65cs3_query_DSRotateStopAng

      ViStatus na65cs3_query_DSRotateStopAng (ViSession vi, ViInt16 channel,
                                              ViInt16 channelGrade,
                                              ViPReal64 rotationStopAngle);

  Purpose

      This function returns the channel rotation stop angle in degrees. The
      range returned for the rotation stop angle is 0 to 359.9999 degrees.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationStopAngle

          Variable Type       ViReal64 (passed by reference)

          Returns the channel rotation stop angle in degrees. The range
          returned for the rotation stop angle is 0 to 359.9999 degrees.
          
________________________________________________________________________________

  na65cs3_query_DSRotationMode

      ViStatus na65cs3_query_DSRotationMode (ViSession vi, ViInt16 channel,
                                             ViInt16 channelGrade,
                                             ViPInt16 rotationMode);

  Purpose

      This function returns the channel rotation mode. The possible return
      values are:
      
      NA65CS3_CONT = 0   (CONTINUOUS Rotation Mode)
      NA65CS3_STEP = 1   (STEP Rotation Mode)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationMode

          Variable Type       ViInt16 (passed by reference)

          Returns the channel rotation mode. Possible return values are:
          
          NA65CS3_CONT = 0   (CONTINUOUS Rotation Mode)
          NA65CS3_STEP = 1   (STEP Rotation Mode)
          
________________________________________________________________________________

  na65cs3_query_DSRotationRate

      ViStatus na65cs3_query_DSRotationRate (ViSession vi, ViInt16 channel,
                                             ViInt16 channelGrade,
                                             ViPReal64 rotationRate);

  Purpose

      This function returns the stimulus channel rotation rate in revolutions
      per second (RPS). The range returned for the rotation rate is 0.15 to
      13.60 or 0.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      rotationRate

          Variable Type       ViReal64 (passed by reference)

          Returns the channel rotation rate in revolutions per second (RPS).
          The range returned for the rotation rate is 0.15 to 13.60.
________________________________________________________________________________

  na65cs3_query_DSSignalMode

      ViStatus na65cs3_query_DSSignalMode (ViSession vi, ViInt16 channel,
                                           ViInt16 channelGrade,
                                           ViPInt16 signalMode);

  Purpose

      This function returns the stimulus channel signal format mode setting.
      The possible return values are:
      
      NA65CS3_RESOLVER = 0   (RESOLVER Signal Format Mode)
      NA65CS3_SYNCHRO  = 1   (SYNCRHO Signal Format Mode)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      signalMode

          Variable Type       ViInt16 (passed by reference)

          Returns the channel signal format mode. Possible return values are:
          
          NA65CS3_RESOLVER = 0   (RESOLVER Signal Format Mode)
          NA65CS3_SYNCHRO  = 1   (SYNCHRO Signal Format Mode)
          
________________________________________________________________________________

  na65cs3_query_DSTriggerSlope

      ViStatus na65cs3_query_DSTriggerSlope (ViSession vi, ViInt16 channel,
                                             ViInt16 channelGrade,
                                             ViPInt16 triggerSlope);

  Purpose

      This function returns the channel trigger slope. The possible return
      values are:
      
      NA65CS3_NEG = 0   (NEGATIVE going level)
      NA65CS3_POS = 1   (POSITIVE going level)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      triggerSlope

          Variable Type       ViInt16 (passed by reference)

          Returns the channel trigger slope. Possible return values are:
          
          NA65CS3_NEG = 0   (NEGATIVE going level)
          NA65CS3_POS = 1   (POSITIVE going level)
          
________________________________________________________________________________

  na65cs3_query_DSTriggerSrc

      ViStatus na65cs3_query_DSTriggerSrc (ViSession vi, ViInt16 channel,
                                           ViInt16 channelGrade,
                                           ViPInt16 triggerSource);

  Purpose

      This function returns the channel trigger source. Possible return values
      are:
      
      NA65CS3_INT = 0   (INTERNAL Trigger Source)
      NA65CS3_EXT = 1   (EXTERNAL Trigger Source)
      NA65CS3_BUS = 2   (BUS Trigger Source)
      NA65CS3_TTL = 3   (TTL Level Trigger Source)
      
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      channelGrade

          Variable Type       ViInt16

          Pass the channel grade.
          Valid values are:
          
          NA65CS3_INSTRUMENT = 0    (Instrument-grade channel)
          NA65CS3_OPERATIONAL  = 1  (Operational/Converter-grade channel)
          

      triggerSource

          Variable Type       ViInt16 (passed by reference)

          Returns the channel trigger source. Possible return values are:
          
          NA65CS3_INT = 0   (INTERNAL Trigger Source)
          NA65CS3_EXT = 1   (EXTERNAL Trigger Source)
          NA65CS3_BUS = 2   (BUS Trigger Source)
          NA65CS3_TTL = 3   (TTL Level Trigger Source)
          
          
________________________________________________________________________________

  na65cs3_query_id

      ViStatus na65cs3_query_id (ViSession vi,
                                 ViChar _VI_FAR identification[]);

  Purpose

      This function will query the instrument using the *IDN? command for
      instrument identification. Return the value in the following format:
      "north atlantic,<part number>,<serial #>,<firmware revision>

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      identification

          Variable Type       ViChar[]

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_query_language

      ViStatus na65cs3_query_language (ViSession vi,
                                       ViChar _VI_FAR language[]);

  Purpose

      This function will query the instrument using the *LANG? command to
      determine the language support. Possible return values are
      "Native", "SCPI", or "Mate CILL".  By default the language supported is
      "Native".

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      language

          Variable Type       ViChar[]

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
________________________________________________________________________________

  na65cs3_query_RefFreq

      ViStatus na65cs3_query_RefFreq (ViSession vi, ViInt16 channel,
                                      ViPReal64 frequency);

  Purpose

      This function returns the reference generator frequency in hertz. The
      range  returned for the frequency is based on the Part Number
      Designation.
      
      
      Part Number Frequency Range Designators:
      A = 360 Hz to 2 KHz
      B = 360 Hz to 4 KHz
      C = 47 Hz to 2 KHz
      D = 47 Hz to 4 KHz
      E = 47 Hz to 10 KHz
      F = 47 Hz to 20 KHz
      G = 47 Hz to 5 KHz
      
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to query. Number of Valid
          Channels are based on the Part Number Designation. Valid range of
          Channel Numbers: 1 to 3.
          

      frequency

          Variable Type       ViReal64 (passed by reference)

          Returns the reference generator frequency in hertz. The valid range
          for the frequency is based on the Part Number Designation.
          
          
________________________________________________________________________________

  na65cs3_query_RefRelayIOState

      ViStatus na65cs3_query_RefRelayIOState (ViSession vi, ViInt16 channel,
                                              ViPInt16 relayIOState);

  Purpose

      This function returns the reference generator channel relay I/O state.
      The possible return values are:
      
      NA65CS3_OPEN  = 0   (OPENED relay status)
      NA65CS3_CLOSE = 1   (CLOSED relay status)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to query. Number of Valid
          Channels are based on the Part Number Designation. Valid range of
          Channel Numbers: 1 to 3.
          

      relayIOState

          Variable Type       ViInt16 (passed by reference)

          Returns the channel relay IO state. Possible return values are:
          
          NA65CS3_OPEN  = 0   (OPENED relay status)
          NA65CS3_CLOSE = 1   (CLOSED relay status)
          
________________________________________________________________________________

  na65cs3_query_RefVolt

      ViStatus na65cs3_query_RefVolt (ViSession vi, ViInt16 channel,
                                      ViPReal64 voltage);

  Purpose

      This function returns the reference generator voltage in volts. The range
      returned for the reference generator voltage is 2 to 115 volts.

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the reference generator channel number to query. Number of Valid
          Channels are based on the Part Number Designation. Valid range of
          Channel Numbers: 1 to 3.
          

      voltage

          Variable Type       ViReal64 (passed by reference)

          Returns the reference generator voltage in volts. The range returned
          for the reference generator voltage is 2 to 115 volts.
________________________________________________________________________________

  na65cs3_query_SDAngle

      ViStatus na65cs3_query_SDAngle (ViSession vi, ViInt16 channel,
                                      ViPReal64 angle);

  Purpose

      This function returns the measurement channel angle position in degrees.
      The range returned for the angle position is 0 to 359.999.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.

      angle

          Variable Type       ViReal64 (passed by reference)

          Returns the angle position in degrees. The range returned for angle
          position is 0 to 359.999.
________________________________________________________________________________

  na65cs3_query_SDBandwidth

      ViStatus na65cs3_query_SDBandwidth (ViSession vi, ViInt16 channel,
                                          ViPInt16 bandwidth);

  Purpose

      This function returns the measurement channel bandwidth setting.
      The possible return values are:
      
      NA65CS3_HIGH_BW = 0   (HIGH bandwidth)
      NA65CS3_LOW_BW  = 1   (LOW bandwidth)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      bandwidth

          Variable Type       ViInt16 (passed by reference)

          Returns the channel bandwidth. Possible return values are:
          
          NA65CS3_HIGH_BW = 0   (HIGH bandwidth)
          NA65CS3_LOW_BW  = 1   (LOW bandwidth)
          
          
________________________________________________________________________________

  na65cs3_query_SDDCScale

      ViStatus na65cs3_query_SDDCScale (ViSession vi, ViInt16 channel,
                                        ViPInt16 DCScale);

  Purpose

      This function returns the measurement channel DC Scale value. The range
      returned for the DC Scale is 100 to 1000.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      DCScale

          Variable Type       ViInt16 (passed by reference)

          Returns the channel DC scale value. The range returned for the DC
          scale is 100 to 1000.
________________________________________________________________________________

  na65cs3_query_SDMaxAngTime

      ViStatus na65cs3_query_SDMaxAngTime (ViSession vi, ViInt16 channel,
                                           ViPInt16 maxAngleSettleTime);

  Purpose

      This function returns the measurement channel maximum angle wait time in
      seconds. The range returned for the maximum angle settle time is 0 to 20.
      
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      maxAngleSettleTime

          Variable Type       ViInt16 (passed by reference)

          Returns the maximum angle settle time in seconds. The range returned
          for maximum angle settle time is 0 to 20.
          
          
________________________________________________________________________________

  na65cs3_query_SDRatio

      ViStatus na65cs3_query_SDRatio (ViSession vi, ViInt16 channel,
                                      ViPInt16 ratio);

  Purpose

      This function returns the measurement channel
      one-speed/two-speed/multi-speed ratio setting. The range returned for the
      ratio is 1 to 255 for EVEN channels, 1 if an ODD channel is specified.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      ratio

          Variable Type       ViInt16 (passed by reference)

          Returns the channel one-speed/two-speed/multi-speed ratio setting.
          The range returned for the ratio is 1 to 255 for EVEN channels, 1 if
          an ODD channel is specified.
          
________________________________________________________________________________

  na65cs3_query_SDRefSrcMode

      ViStatus na65cs3_query_SDRefSrcMode (ViSession vi, ViInt16 channel,
                                           ViPInt16 refSourceMode);

  Purpose

      This function returns the measurement reference source setting.
      The possible return values are:
      
      NA65CS3_INT = 0   (INTERNAL Reference Source)
      NA65CS3_EXT = 1   (EXTERNAL Reference Source)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      refSourceMode

          Variable Type       ViInt16 (passed by reference)

          Returns the channel reference source. Possible return values are:
          
          NA65CS3_INT = 0   (INTERNAL Reference Source)
          NA65CS3_EXT = 1   (EXTERNAL Reference Source)
          
________________________________________________________________________________

  na65cs3_query_SDRelayIOState

      ViStatus na65cs3_query_SDRelayIOState (ViSession vi, ViInt16 channel,
                                             ViPInt16 relayIOState);

  Purpose

      This function returns the measurement channel relay I/O state.
      The possible return values are:
      
      NA65CS3_OPEN  = 0   (OPENED relay status)
      NA65CS3_CLOSE = 1   (CLOSED relay status)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      relayIOState

          Variable Type       ViInt16 (passed by reference)

          Returns the channel relay IO state. Possible return values are:
          
          NA65CS3_OPEN  = 0   (OPENED relay status)
          NA65CS3_CLOSE = 1   (CLOSED relay status)
          
________________________________________________________________________________

  na65cs3_query_SDSignalMode

      ViStatus na65cs3_query_SDSignalMode (ViSession vi, ViInt16 channel,
                                           ViPInt16 signalMode);

  Purpose

      This function returns the measurement channel signal format mode setting.
      The possible return values are:
      
      NA65CS3_RESOLVER = 0   (RESOLVER Signal Format Mode)
      NA65CS3_SYNCHRO  = 1   (SYNCRHO Signal Format Mode)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      signalMode

          Variable Type       ViInt16 (passed by reference)

          Returns the channel signal format mode. Possible return values are:
          
          NA65CS3_RESOLVER = 0   (RESOLVER Signal Format Mode)
          NA65CS3_SYNCHRO  = 1   (SYNCHRO Signal Format Mode)
          
________________________________________________________________________________

  na65cs3_query_SDUpdateMode

      ViStatus na65cs3_query_SDUpdateMode (ViSession vi, ViInt16 channel,
                                           ViPInt16 updateMode);

  Purpose

      This function returns the measurement update mode setting.
      The possible return values are:
      
      NA65CS3_LATCH  = 0   (LATCH Update Mode)
      NA65CS3_TRACK  = 1   (TRACK Update Mode)
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.
          

      updateMode

          Variable Type       ViInt16 (passed by reference)

          Returns the channel update mode. Possible return values are:
          
          NA65CS3_LATCH  = 0   (LATCH Update Mode)
          NA65CS3_TRACK  = 1   (TRACK Update Mode)
          
________________________________________________________________________________

  na65cs3_query_SDVelocity

      ViStatus na65cs3_query_SDVelocity (ViSession vi, ViInt16 channel,
                                         ViPReal64 velocity);

  Purpose

      This function returns the measurement channel velocity in degrees/second.
      The range returned for the velocity is -32767 and 32767.
      

  Parameter List

      vi

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None

      channel

          Variable Type       ViInt16

          Pass the channel number to query. Number of Valid Channels are based
          on the Part Number Designation. Valid range of Channel Numbers: 1 to
          4.

      velocity

          Variable Type       ViReal64 (passed by reference)

          Returns the angle position in degrees. The range returned for angle
          position is 0 to 359.999.
________________________________________________________________________________

  na65cs3_ReadInstrData

      ViStatus na65cs3_ReadInstrData (ViSession instrumentHandle,
                                      ViInt32 number_ofBytesToRead,
                                      ViChar _VI_FAR readBuffer[],
                                      ViPInt32 numBytesRead);

  Purpose

      This function reads data from the instrument.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      number_ofBytesToRead

          Variable Type       ViInt32

          Pass the maximum number of bytes to read from the instruments.
          
          Valid Range:  0 to the number of elements in the Read Buffer.
          
          Default:  0
          
          

      readBuffer

          Variable Type       ViChar[]

          After this function executes, this parameter contains the data that
          was read from the instrument.

      numBytesRead

          Variable Type       ViInt32 (passed by reference)

          Returns the number of bytes actually read from the instrument and
          stored in the Read Buffer.

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_reset

      ViStatus na65cs3_reset (ViSession instrumentHandle);

  Purpose

      This function resets the instrument to a known state and sends
      initialization commands to the instrument.  The initialization commands
      set instrument settings such as Headers Off, Short Command form, and Data
      Transfer Binary to the state necessary for the operation of the
      instrument driver.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_ResetInterchangeCheck

      ViStatus na65cs3_ResetInterchangeCheck (ViSession instrumentHandle);

  Purpose

      When developing a complex test system that consists of multiple test
      modules, it is generally a good idea to design the test modules so that
      they can run in any order.  To do so requires ensuring that each test
      module completely configures the state of each instrument it uses.  If a
      particular test module does not completely configure the state of an
      instrument, the state of the instrument depends on the configuration from
      a previously executed test module.  If you execute the test modules in a
      different order, the behavior of the instrument and therefore the entire
      test module is likely to change.  This change in behavior is generally
      instrument specific and represents an interchangeability problem.
      
      You can use this function to test for such cases.  After you call this
      function, the interchangeability checking algorithms in the specific
      driver ignore all previous configuration operations.  By calling this
      function at the beginning of a test module, you can determine whether the
      test module has dependencies on the operation of previously executed test
      modules.
      
      This function does not clear the interchangeability warnings from the
      list of previously recorded interchangeability warnings.  If you want to
      guarantee that the na65cs3_GetNextInterchangeWarning function only
      returns those interchangeability warnings that are generated after
      calling this function, you must clear the list of interchangeability
      warnings.  You can clear the interchangeability warnings list by
      repeatedly calling the na65cs3_GetNextInterchangeWarning function until
      no more interchangeability warnings are returned.  If you are not
      interested in the content of those warnings, you can call the
      na65cs3_ClearInterchangeWarnings function.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_ResetWithDefaults

      ViStatus na65cs3_ResetWithDefaults (ViSession instrumentHandle);

  Purpose

      This function resets the instrument and applies initial user specified
      settings from the Logical Name which was used to initialize the session.
      If the session was created without a Logical Name, this function is
      equivalent to the na65cs3_reset function.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_revision_query

      ViStatus na65cs3_revision_query (ViSession instrumentHandle,
                                       ViChar _VI_FAR instrumentDriverRevision[],
                                       ViChar _VI_FAR firmwareRevision[]);

  Purpose

      This function returns the revision numbers of the instrument driver and
      instrument firmware.
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      instrumentDriverRevision

          Variable Type       ViChar[]

          Returns the instrument driver software revision numbers in the form
          of a string.
          
          You must pass a ViChar array with at least 256 bytes.

      firmwareRevision

          Variable Type       ViChar[]

          Returns the instrument firmware revision numbers in the form of a
          string.
          
          You must pass a ViChar array with at least 256 bytes.
          

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_self_test

      ViStatus na65cs3_self_test (ViSession instrumentHandle,
                                  ViPInt16 selfTestResult,
                                  ViChar _VI_FAR selfTestMessage[]);

  Purpose

      This function runs the instrument's self test routine and returns the
      test result(s).
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      selfTestResult

          Variable Type       ViInt16 (passed by reference)

          This control contains the value returned from the instrument self
          test.  Zero means success.  For any other code, see the device's
          operator's manual.
          
          Self-Test Code    Description
          ---------------------------------------
             0              Passed self test
             1              Self test failed
          
          

      selfTestMessage

          Variable Type       ViChar[]

          Returns the self-test response string from the instrument. See the
          device's operation manual for an explanation of the string's
          contents.
          
          You must pass a ViChar array with at least 256 bytes.

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_SetAttributeViBoolean

      ViStatus na65cs3_SetAttributeViBoolean (ViSession instrumentHandle,
                                              ViChar _VI_FAR channelName[],
                                              ViAttr attributeID,
                                              ViBoolean attributeValue);

  Purpose

      This function sets the value of a ViBoolean attribute.
      
      This is a low-level function that you can use to set the values of
      instrument-specific attributes and inherent IVI attributes.  If the
      attribute represents an instrument state, this function performs
      instrument I/O in the following cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid or
      is different than the value you specify.
      
      This instrument driver contains high-level functions that set most of the
      instrument attributes.  It is best to use the high-level driver functions
      as much as possible.  They handle order dependencies and multithread
      locking for you.  In addition, they perform status checking only after
      setting all of the attributes.  In contrast, when you set multiple
      attributes using the SetAttribute functions, the functions check the
      instrument status after each call.
      
      Also, when state caching is enabled, the high-level functions that
      configure multiple attributes perform instrument I/O only for the
      attributes whose value you change.  Thus, you can safely call the
      high-level functions without the penalty of redundant instrument I/O.
      
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to set the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViBoolean
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViBoolean are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViBoolean

          Pass the value to which you want to set the attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_SetAttributeViInt32

      ViStatus na65cs3_SetAttributeViInt32 (ViSession instrumentHandle,
                                            ViChar _VI_FAR channelName[],
                                            ViAttr attributeID,
                                            ViInt32 attributeValue);

  Purpose

      This function sets the value of a ViInt32 attribute.
      
      This is a low-level function that you can use to set the values of
      instrument-specific attributes and inherent IVI attributes.  If the
      attribute represents an instrument state, this function performs
      instrument I/O in the following cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid or
      is different than the value you specify.
      
      This instrument driver contains high-level functions that set most of the
      instrument attributes.  It is best to use the high-level driver functions
      as much as possible.  They handle order dependencies and multithread
      locking for you.  In addition, they perform status checking only after
      setting all of the attributes.  In contrast, when you set multiple
      attributes using the SetAttribute functions, the functions check the
      instrument status after each call.
      
      Also, when state caching is enabled, the high-level functions that
      configure multiple attributes perform instrument I/O only for the
      attributes whose value you change.  Thus, you can safely call the
      high-level functions without the penalty of redundant instrument I/O.
      
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to set the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViInt32 type.
            If you choose to see all IVI attributes, the data types appear
            to the right of the attribute names in the list box.
            Attributes with data types other than ViInt32 are dim.  If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViInt32

          Pass the value to which you want to set the attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_SetAttributeViReal64

      ViStatus na65cs3_SetAttributeViReal64 (ViSession instrumentHandle,
                                             ViChar _VI_FAR channelName[],
                                             ViAttr attributeID,
                                             ViReal64 attributeValue);

  Purpose

      This function sets the value of a ViReal64 attribute.
      
      This is a low-level function that you can use to set the values of
      instrument-specific attributes and inherent IVI attributes.  If the
      attribute represents an instrument state, this function performs
      instrument I/O in the following cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid or
      is different than the value you specify.
      
      This instrument driver contains high-level functions that set most of the
      instrument attributes.  It is best to use the high-level driver functions
      as much as possible.  They handle order dependencies and multithread
      locking for you.  In addition, they perform status checking only after
      setting all of the attributes.  In contrast, when you set multiple
      attributes using the SetAttribute functions, the functions check the
      instrument status after each call.
      
      Also, when state caching is enabled, the high-level functions that
      configure multiple attributes perform instrument I/O only for the
      attributes whose value you change.  Thus, you can safely call the
      high-level functions without the penalty of redundant instrument I/O.
      
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to set the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViReal64
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViReal64 are dim.  If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViReal64

          Pass the value to which you want to set the attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_SetAttributeViSession

      ViStatus na65cs3_SetAttributeViSession (ViSession instrumentHandle,
                                              ViChar _VI_FAR channelName[],
                                              ViAttr attributeID,
                                              ViSession attributeValue);

  Purpose

      This function sets the value of a ViSession attribute.
      
      This is a low-level function that you can use to set the values of
      instrument-specific attributes and inherent IVI attributes.  If the
      attribute represents an instrument state, this function performs
      instrument I/O in the following cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid or
      is different than the value you specify.
      
      This instrument driver contains high-level functions that set most of the
      instrument attributes.  It is best to use the high-level driver functions
      as much as possible.  They handle order dependencies and multithread
      locking for you.  In addition, they perform status checking only after
      setting all of the attributes.  In contrast, when you set multiple
      attributes using the SetAttribute functions, the functions check the
      instrument status after each call.
      
      Also, when state caching is enabled, the high-level functions that
      configure multiple attributes perform instrument I/O only for the
      attributes whose value you change.  Thus, you can safely call the
      high-level functions without the penalty of redundant instrument I/O.
      
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to set the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViSession
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViSession are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViSession

          Pass the value to which you want to set the attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_SetAttributeViString

      ViStatus na65cs3_SetAttributeViString (ViSession instrumentHandle,
                                             ViChar _VI_FAR channelName[],
                                             ViAttr attributeID,
                                             ViChar _VI_FAR attributeValue[]);

  Purpose

      This function sets the value of a ViString attribute.
      
      This is a low-level function that you can use to set the values of
      instrument-specific attributes and inherent IVI attributes.  If the
      attribute represents an instrument state, this function performs
      instrument I/O in the following cases:
      
      - State caching is disabled for the entire session or for the particular
      attribute.
      
      - State caching is enabled and the currently cached value is invalid or
      is different than the value you specify.
      
      This instrument driver contains high-level functions that set most of the
      instrument attributes.  It is best to use the high-level driver functions
      as much as possible.  They handle order dependencies and multithread
      locking for you.  In addition, they perform status checking only after
      setting all of the attributes.  In contrast, when you set multiple
      attributes using the SetAttribute functions, the functions check the
      instrument status after each call.
      
      Also, when state caching is enabled, the high-level functions that
      configure multiple attributes perform instrument I/O only for the
      attributes whose value you change.  Thus, you can safely call the
      high-level functions without the penalty of redundant instrument I/O.
      
      
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      channelName

          Variable Type       ViChar[]

          If the attribute is channel-based, this parameter specifies the name
          of the channel on which to set the value of the attribute. If the
          attribute is not channel-based, then pass VI_NULL or an empty string.
          
          Valid Channel Names:  1
          
          Default Value:  ""
          

      attributeID

          Variable Type       ViAttr

          Pass the ID of an attribute.
          
          From the function panel window, you can use this control as follows.
          
          - Click on the control or press <ENTER>, <spacebar>, or
            <ctrl-down arrow>, to display a dialog box containing a
            hierarchical list of the available attributes.  Attributes
            whose value cannot be set are dim.  Help text is shown for
            each attribute.  Select an attribute by double-clicking on it
            or by selecting it and then pressing <ENTER>.
          
            Read-only attributes appear dim in the list box.  If you
            select a read-only attribute, an error message appears.
          
            A ring control at the top of the dialog box allows you to see
            all IVI attributes or only the attributes of the ViString
            type.  If you choose to see all IVI attributes, the data types
            appear to the right of the attribute names in the list box.
            Attributes with data types other than ViString are dim. If
            you select an attribute data type that is dim, LabWindows/CVI
            transfers you to the function panel for the corresponding
            function that is consistent with the data type.
          
          - If you want to enter a variable name, press <CTRL-T> to change
            this ring control to a manual input box.
          
          - If the attribute in this ring control has named constants as
            valid values, you can view the constants by moving to the
            Attribute Value control and pressing <ENTER>.
          

      attributeValue

          Variable Type       ViChar[]

          Pass the value to which you want to set the attribute.
          
          From the function panel window, you can use this control as follows.
          
          - If the attribute currently showing in the Attribute ID ring
            control has constants as valid values, you can view a list of
            the constants by pressing <ENTER> on this control.  Select a
            value by double-clicking on it or by selecting it and then
            pressing <ENTER>.
          
            Note:  Some of the values might not be valid depending on the
            current settings of the instrument session.
          
          Default Value: none

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_UnlockSession

      ViStatus na65cs3_UnlockSession (ViSession instrumentHandle,
                                      ViPBoolean callerHasLock);

  Purpose

      This function releases a lock that you acquired on an instrument session
      using na65cs3_LockSession.  Refer to na65cs3_LockSession for additional
      information on session locks.
      

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      callerHasLock

          Variable Type       ViBoolean (passed by reference)

          This parameter serves as a convenience.  If you do not want to use
          this parameter, pass VI_NULL.
          
          Use this parameter in complex functions to keep track of whether you
          obtain a lock and therefore need to unlock the session.
          Pass the address of a local ViBoolean variable.  In the declaration
          of the local variable, initialize it to VI_FALSE.  Pass the address
          of the same local variable to any other calls you make to
          na65cs3_LockSession or na65cs3_UnlockSession in the same function.
          
          The parameter is an input/output parameter.  na65cs3_LockSession and
          na65cs3_UnlockSession each inspect the current value and take the
          following actions:
          
          - If the value is VI_TRUE, na65cs3_LockSession does not lock the
          session again.  If the value is VI_FALSE, na65cs3_LockSession obtains
          the lock and sets the value of the parameter to VI_TRUE.
          
          - If the value is VI_FALSE, na65cs3_UnlockSession does not attempt to
          unlock the session.  If the value is VI_TRUE, na65cs3_UnlockSession
          releases the lock and sets the value of the parameter to VI_FALSE.
          
          Thus, you can, call na65cs3_UnlockSession at the end of your function
          without worrying about whether you actually have the lock.
          
          Example:
          
          ViStatus TestFunc (ViSession vi, ViInt32 flags)
          {
              ViStatus error = VI_SUCCESS;
              ViBoolean haveLock = VI_FALSE;
          
              if (flags & BIT_1)
                  {
                  viCheckErr( na65cs3_LockSession(vi, &haveLock));
                  viCheckErr( TakeAction1(vi));
                  if (flags & BIT_2)
                      {
                      viCheckErr( na65cs3_UnlockSession(vi, &haveLock));
                      viCheckErr( TakeAction2(vi));
                      viCheckErr( na65cs3_LockSession(vi, &haveLock);
                      }
                  if (flags & BIT_3)
                      viCheckErr( TakeAction3(vi));
                  }
          
          Error:
              /*
                 At this point, you cannot really be sure that
                 you have the lock.  Fortunately, the haveLock
                 variable takes care of that for you.
              */
              na65cs3_UnlockSession(vi, &haveLock);
              return error;
          }

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          
________________________________________________________________________________

  na65cs3_WriteInstrData

      ViStatus na65cs3_WriteInstrData (ViSession instrumentHandle,
                                       ViChar _VI_FAR writeBuffer[]);

  Purpose

      This function writes a user-specified string to the instrument.
      
      Note:  This function bypasses IVI attribute state caching.  Therefore,
      when you call this function, the cached values for all attributes will be
      invalidated.

  Parameter List

      instrumentHandle

          Variable Type       ViSession

          The ViSession handle that you obtain from the na65cs3_init or
          na65cs3_InitWithOptions function.  The handle identifies a particular
          instrument session.
          
          Default Value:  None
          

      writeBuffer

          Variable Type       ViChar[]

          Pass the string to be written to the instrument.

  Return Value

          Returns the status code of this operation.  The status code  either
          indicates success or describes an error or warning condition.  You
          examine the status code from each call to an instrument driver
          function to determine if an error occurred.
          
          To obtain a text description of the status code, call the
          na65cs3_error_message function.  To obtain additional information
          about the error condition, call the na65cs3_GetError function.  To
          clear the error information from the driver, call the
          na65cs3_ClearError function.
          
          The general meaning of the status code is as follows:
          
          Value                  Meaning
          -------------------------------
          0                      Success
          Positive Values        Warnings
          Negative Values        Errors
          
          This driver defines the following status codes:
          
          Status    Description
          -------------------------------------------------
          WARNINGS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined warning codes here.
           *================================================END=CHANGE=*/
          
          ERRORS:
          /*=CHANGE:===================================================*
          Insert Instrument-defined error codes here.
           *================================================END=CHANGE=*/
          
          This instrument driver also returns errors and warnings defined by
          other sources.  The following table defines the ranges of additional
          status codes that this driver can return.  The table lists the
          different include files that contain the defined constants for the
          particular status codes:
          
          Numeric Range (in Hex)   Status Code Types
          -------------------------------------------------
          3FFA0000 to 3FFA1FFF     IVI      Warnings
          3FFF0000 to 3FFFFFFF     VISA     Warnings
          3FFC0000 to 3FFCFFFF     VXIPnP   Driver Warnings
          
          BFFA0000 to BFFA1FFF     IVI      Errors
          BFFF0000 to BFFFFFFF     VISA     Errors
          BFFC0000 to BFFCFFFF     VXIPnP   Driver Errors
          
          

________________________________________________________________________________

Attribute Information for the Following Functions:

        na65cs3_SetAttributeViInt32
        na65cs3_GetAttributeViInt32
        na65cs3_CheckAttributeViInt32
        na65cs3_SetAttributeViReal64
        na65cs3_GetAttributeViReal64
        na65cs3_CheckAttributeViReal64
        na65cs3_SetAttributeViString
        na65cs3_GetAttributeViString
        na65cs3_CheckAttributeViString
        na65cs3_SetAttributeViBoolean
        na65cs3_GetAttributeViBoolean
        na65cs3_CheckAttributeViBoolean
        na65cs3_SetAttributeViSession
        na65cs3_GetAttributeViSession
        na65cs3_CheckAttributeViSession

   Inherent IVI Attributes
      User Options
         Range Check                              NA65CS3_ATTR_RANGE_CHECK
         Query Instrument Status                  NA65CS3_ATTR_QUERY_INSTRUMENT_STATUS
         Cache                                    NA65CS3_ATTR_CACHE
         Simulate                                 NA65CS3_ATTR_SIMULATE
         Record Value Coercions                   NA65CS3_ATTR_RECORD_COERCIONS
         Interchange Check                        NA65CS3_ATTR_INTERCHANGE_CHECK
      Driver Identification
         Description                              NA65CS3_ATTR_SPECIFIC_DRIVER_DESCRIPTION
         Driver Prefix                            NA65CS3_ATTR_SPECIFIC_DRIVER_PREFIX
         Driver Vendor                            NA65CS3_ATTR_SPECIFIC_DRIVER_VENDOR
         Revision                                 NA65CS3_ATTR_SPECIFIC_DRIVER_REVISION
         Class Specification Major Version        NA65CS3_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION
         Class Specification Minor Version        NA65CS3_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION
      Driver Capabilities
         Supported Instrument Models              NA65CS3_ATTR_SUPPORTED_INSTRUMENT_MODELS
         Class Group Capabilities                 NA65CS3_ATTR_GROUP_CAPABILITIES
      Instrument Identification
         Manufacturer                             NA65CS3_ATTR_INSTRUMENT_MANUFACTURER
         Model                                    NA65CS3_ATTR_INSTRUMENT_MODEL
         Firmware Revision                        NA65CS3_ATTR_INSTRUMENT_FIRMWARE_REVISION
      Advanced Session Information
         Logical Name                             NA65CS3_ATTR_LOGICAL_NAME
         I/O Resource Descriptor                  NA65CS3_ATTR_IO_RESOURCE_DESCRIPTOR
         Driver Setup                             NA65CS3_ATTR_DRIVER_SETUP
   Miscellaneous Attributes
      Manufacturer ID                             NA65CS3_ATTR_VXI_MANF_ID
      Model Code                                  NA65CS3_ATTR_VXI_MODEL_CODE


NA65CS3_ATTR_CACHE
Data Type:     ViBoolean
Description:   Specifies whether to cache the value of attributes.  When
caching is enabled, the instrument driver keeps track of the current instrument
settings and avoids sending redundant commands to the instrument.  Thus, you
can significantly increase execution speed.
    The instrument driver can choose always to cache or never to cache
particular attributes regardless of the setting of this attribute.
    The default value is VI_TRUE.  Use the na65cs3_InitWithOptions function to
override this value.


NA65CS3_ATTR_DRIVER_SETUP
Data Type:     ViString
Restrictions:  Not settable.
Description:   Some cases exist where you must specify instrument driver
options at initialization time.  An example of this is specifying a particular
instrument model from among a family of instruments that the driver supports.
This is useful when using simulation.  You can specify driver-specific options
through the DriverSetup keyword in the optionsString parameter to the
na65cs3_InitWithOptions function.  If you open an instrument using a logical
name, you can also specify the options through the IVI Configuration Utility.
    The default value is an empty string.


NA65CS3_ATTR_GROUP_CAPABILITIES
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains a comma-separated list of class-extention
groups that this driver implements.


NA65CS3_ATTR_INSTRUMENT_FIRMWARE_REVISION
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains the firmware revision information for the
instrument you are currently using.


NA65CS3_ATTR_INSTRUMENT_MANUFACTURER
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains the name of the instrument manufacturer
you are currently using.


NA65CS3_ATTR_INSTRUMENT_MODEL
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains the model number or name of the
instrument that you are currently using.


NA65CS3_ATTR_INTERCHANGE_CHECK
Data Type:     ViBoolean
Description:   Specifies whether to perform interchangeability checking and
retrieve interchangeability warnings.

The default value is VI_FALSE.

Interchangeability warnings indicate that using your application with a
different instrument might cause different behavior.  You call na65cs3 Get Next
Interchange Warning to extract interchange warnings.  Call the
na65cs3_ClearInterchangeWarnings function to clear the list of
interchangeability warnings without reading them.
Interchangeability checking logs a warning for each attribute you have not set
that affects the behavior of the instrument.


NA65CS3_ATTR_IO_RESOURCE_DESCRIPTOR
Data Type:     ViString
Restrictions:  Not settable.
Description:   Indicates the resource descriptor the driver uses to identify
the physical device.
    If you initialize the driver with a logical name, this attribute contains
the resource descriptor that corresponds to the entry in the IVI Configuration
utility.
    If you initialize the instrument driver with the resource descriptor, this
attribute contains that value.


NA65CS3_ATTR_LOGICAL_NAME
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string containing the logical name you specified when opening
the current IVI session.
     You may pass a logical name to the na65cs3_init or na65cs3_InitWithOptions
functions.  The IVI Configuration utility must contain an entry for the logical
name.  The logical name entry refers to a virtual instrument section in the IVI
Configuration file.  The virtual instrument section specifies a physical device
and initial user options.


NA65CS3_ATTR_QUERY_INSTRUMENT_STATUS
Data Type:     ViBoolean
Description:   Specifies whether the instrument driver queries the instrument
status after each operation.  Querying the instrument status is very useful for
debugging.  After you validate your program, you can set this attribute to
VI_FALSE to disable status checking and maximize performance
    The instrument driver can choose to ignore status checking for particular
attributes regardless of the setting of this attribute.
    The default value is VI_FALSE.  Use the na65cs3_InitWithOptions function to
override this value.


NA65CS3_ATTR_RANGE_CHECK
Data Type:     ViBoolean
Description:   Specifies whether to validate attribute values and function
parameters.  If enabled, the instrument driver validates the parameter values
that you pass to driver functions.  Range checking parameters is very useful
for debugging.  After you validate your program, you can set this attribute to
VI_FALSE to disable range checking and maximize performance.
    The default value is VI_TRUE.  Use the na65cs3_InitWithOptions function to
override this value.


NA65CS3_ATTR_RECORD_COERCIONS
Data Type:     ViBoolean
Description:   Specifies whether the IVI engine keeps a list of the value
coercions it makes for integer and real type attributes.  You call na65cs3 Get
Next Coercion Record to extract and delete the oldest coercion record from the
list.
    The default value is VI_FALSE.  Use the na65cs3_InitWithOptions function to
override this value.


NA65CS3_ATTR_SIMULATE
Data Type:     ViBoolean
Description:   Specifies whether or not to simulate instrument driver I/O
operations.  If simulation is enabled, instrument driver functions perform
range checking and call Ivi_GetAttribute and Ivi_SetAttribute functions, but
they do not perform instrument I/O.  For output parameters that represent
instrument data, the instrument driver functions return calculated values.
    The default value is VI_FALSE.  Use the na65cs3_InitWithOptions function to
override this value.


NA65CS3_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MAJOR_VERSION
Data Type:     ViInt32
Restrictions:  Not settable.
Description:   The major version number of the class specification with which
this driver is compliant.


NA65CS3_ATTR_SPECIFIC_DRIVER_CLASS_SPEC_MINOR_VERSION
Data Type:     ViInt32
Restrictions:  Not settable.
Description:   The minor version number of the class specification with which
this driver is compliant.


NA65CS3_ATTR_SPECIFIC_DRIVER_DESCRIPTION
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains a brief description of the specific
driver.


NA65CS3_ATTR_SPECIFIC_DRIVER_PREFIX
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains the prefix for the instrument driver.
The name of each user-callable function in this driver starts with this prefix.


NA65CS3_ATTR_SPECIFIC_DRIVER_REVISION
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains additional version information about this
instrument driver.


NA65CS3_ATTR_SPECIFIC_DRIVER_VENDOR
Data Type:     ViString
Restrictions:  Not settable.
Description:   A string that contains the name of the vendor that supplies this
driver.


NA65CS3_ATTR_SUPPORTED_INSTRUMENT_MODELS
Data Type:     ViString
Restrictions:  Not settable.
Description:   Contains a model code of the instrument. For drivers that
support more than one device, this attribute contains a comma-separated list of
supported instrument models.


NA65CS3_ATTR_VXI_MANF_ID
Data Type:     ViInt32
Restrictions:  Not settable.
Description:   Returns the manufacturer identification number of the VXIbus
device.  The instrument driver gets the value of this attribute when you pass
VI_TRUE for the ID Query parameter to the na65cs3_init or
na65cs3_InitWithOptions function.


NA65CS3_ATTR_VXI_MODEL_CODE
Data Type:     ViInt32
Restrictions:  Not settable.
Description:   Returns the model code for the VXIbus device.  The instrument
driver gets the value of this attribute when you pass VI_TRUE for the ID Query
parameter to the na65cs3_init or na65cs3_InitWithOptions function.


