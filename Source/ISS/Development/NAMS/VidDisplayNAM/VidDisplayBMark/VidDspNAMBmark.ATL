 000100	BEGIN, ATLAS PROGRAM 'NAM-VIDDISPLAY'			         $
C************************************************************************$
C   BENCH MARK TO TEST THE VIDEO DISPLAY NON-ATLAS MODULE. THIS          $
C   BENCH MARK WILL SET THE VALUES OF "TYPE", "MODE", AND    	         $
C   "INSTRUCTIONS". FIRST THE RS170.arb FILE WILL BE LOADED AND          $
C   THE ARB WILL PROVIDE A SIMULATED RS-170 SIGNAL TO THE VIDEO          $
C   CAPTURE CARD. THE OPERATOR WILL BE PROMPTED VIA THE OPERATOR         $
C   INSTRUCTIONS FORM TO VERIFY THE IMAGE. ATLAS EXECUTION WILL          $
C   BE SUSPENDED UNTIL THE VIDEO DISPLAY WINDOW IS TERMINATED AND        $
C   THE ERROR STATUS IS RETURNED. THE IMAGE WILL BE DISPLAYED FIRST WITH $
C   OPERATORS INSTRUCTIONS, THEN WITHOUT. THE RS-343A CONFIGURATION WILL $
C   BE TESTED NEXT.                                                      $
C					                                 $
C************************************************************************$
C								         $
C********************************** INCLUDES ****************************$
C								         $
 000105	INCLUDE, NON-ATLAS MODULE 'VIDDISPLAYNAM'		         $
 000106 INCLUDE, NON-ATLAS MODULE 'ARBNAM'                               $			         
C								         $
C************************** DECLARE LOCAL VARIABLES *********************$
C								         $
 000400	DECLARE, VARIABLE, 
 'MODE' IS STRING (15) OF CHAR;
 'TYPE' IS STRING (17) OF CHAR;
 'INSTRUCTIONS' IS STRING (256) OF CHAR;
 'HELP-FILE' IS STRING (32) OF CHAR;
 'HELP-TEXT' IS STRING (256) OF CHAR;
 'TARG-DIM-X' IS STRING (15) OF CHAR;
 'TARG-DIM-Y' IS STRING (15) OF CHAR;
 'HORZ-FOV' IS DECIMAL;
 'VERT-FOV' IS DECIMAL;
 'START-X' IS INTEGER;
 'START-Y' IS INTEGER;
 'END-X' IS INTEGER;
 'END-Y' IS INTEGER;
 'VID-ERROR-CODE' IS INTEGER;
 'VID-RETURN-STRING' IS STRING (256) OF CHAR                             $
C						                         $
 000500 DECLARE, VARIABLE, 
 'ARB_FILE' IS STRING (80) OF CHAR                        		 $
C									 $
 000600 DECLARE, VARIABLE,
 'RETURN_STATUS' IS INTEGER                                              $
C									 $
 000700 DECLARE, VARIABLE, 
 'RETURN_STRING' IS STRING (499) OF CHAR                                 $
C							                 $
C ***********************************************************************$
C * PROCEDURE: CLRSCR				    	               **$
C ***********************************************************************$
C 								         $
 001630 DEFINE, 'CLRSCR', PROCEDURE                                      $
 001640     OUTPUT, C' \LF\\LF\\LF\\LF\\LF\\LF\\LF\ \LF\
                       \LF\\LF\\LF\\LF\\LF\\LF\ \LF\ \LF\'               $
 001650 END, 'CLRSCR'                                                    $
C 									 $
C ***********************************************************************$
C *		     START PROGRAM EXECUTION    	               **$
C ***********************************************************************$
C							                 $
E10000 OUTPUT, C' \LF\ \LF\',
         C'************* OPERATOR INSTRUCTIONS ***********',
         C'\LF\ \LF\',
         C'  1. CONNECT THE CAMERA VIDEO 0 INPUT TO ARB OUTPUT.',
         C'\LF\ \LF\',
         C'  LOADING ARB VIDEO FILES. PLEASE WAIT...',
         C' \LF\ \LF\' $
C									 $
E20000 CALCULATE, 'ARB_FILE' = C'Rs170cross.arb'                              $
C*********************       LOAD RS-170 SIGNAL       *******************$
 	PERFORM, 'ARBNAM' ('ARB_FILE', 'RETURN_STATUS','RETURN_STRING')  $
     	IF, ('RETURN_STATUS' NE 0), THEN				  $
	     OUTPUT, C'ARBNAM RS-170 ERROR CODE: ', 'RETURN_STATUS'	  $
             OUTPUT, C'ARBNAM RS-170 ERROR DESCRIPTION: ', 'RETURN_STRING'$
        END, IF                                                           $	
	OUTPUT, 
         C' \LF\ \LF\',
	 C' TESTING FOV MODE USING AN RS-170 SIGNAL.',
	 C'\LF\ \LF\ \LF\ \LF\',
         C'            **** PRESS ENTER TO CONTINUE ***',
         C'\LF\'                                                         $
C								         $
 	INPUT, GO-NOGO                                                   $ 
 	PERFORM, 'CLRSCR'                                                $
C									 $
C***************** ASSIGN FOV DATA TO BE PASSED TO VIDDISPLAY ***********$			
C								         $
E30000 CALCULATE,
 'MODE' = C'FOV',
 'TYPE' = C'RS170',
 'INSTRUCTIONS' = C'This FOV test sure is enjoyable!',
 'HELP-FILE' = C'HELP.JPG',
 'HELP-TEXT' = C'READY FOR TAKEOFF',
 'TARG-DIM-X' = C'20',
 'TARG-DIM-Y' = C'15' $ 
C 		     						          $
C*************** PASS FOV ARGUMENTS AND RETURN ERROR CODE ****************$
C									  $
	PERFORM, 'VIDDISPLAYNAM' ('MODE', 'TYPE', 'INSTRUCTIONS', 
				 'HELP-FILE', 'HELP-TEXT', 
			         'TARG-DIM-X', 'TARG-DIM-Y',
				 'HORZ-FOV', 'VERT-FOV', 
			 	 'VID-ERROR-CODE', 'VID-RETURN-STRING')   $
C									  $
     	IF, ('VID-ERROR-CODE' EQ 0), THEN				  $
             OUTPUT, C'FOV MODE TEST WAS SUCCESSFUL.'                     $
	     OUTPUT, C'HORIZONTAL FOV: ', 'HORZ-FOV'			  $
	     OUTPUT, C'  VERTICAL FOV: ', 'VERT-FOV'			  $
     	ELSE								  $
	     OUTPUT, C'ERROR CODE: ', 'VID-ERROR-CODE'			  $
             OUTPUT, C'ERROR DESCRIPTION: ', 'VID-RETURN-STRING'          $
        END, IF                                                           $	
C                                                                         $
 	INPUT, GO-NOGO                                                    $
	PERFORM, 'CLRSCR'                                                 $
C									  $
	OUTPUT, 
         C' \LF\ \LF\',
	 C' TESTING TARGET COORDINATE MODE USING AN RS-170 SIGNAL.',
	 C'\LF\ \LF\ \LF\ \LF\',
         C'              **** PRESS ENTER TO CONTINUE ***',
         C'\LF\'							  $
	INPUT, GO-NOGO                                                    $
C									  $
C************* ASSIGN TGTCOORD DATA TO BE PASSED TO VIDDISPLAY  **********$			
C								          $
E40000 CALCULATE, 
 'MODE' = C'TGTCOORD',
 'TYPE' = C'RS170',
 'INSTRUCTIONS' = C'This TARGET COORDINATE test is AWESOME!',
 'HELP-FILE' = C'HELP.BMP',
 'HELP-TEXT' = C'HELP A GUY OUT HERE.' $
C 		     						          $
C**************** PASS ARGUMENTS AND RETURN ERROR CODE *******************$
C									  $
	PERFORM, 'VIDDISPLAYNAM' ('MODE', 'TYPE', 'INSTRUCTIONS',
				 'HELP-FILE', 'HELP-TEXT', 'START-X',
				 'START-Y', 'END-X', 'END-Y',
			         'VID-ERROR-CODE', 'VID-RETURN-STRING')$
C									  $
     	IF, ('VID-ERROR-CODE' EQ 0), THEN				  $
             OUTPUT, C'TARGET COORDINATE MODE TEST WAS SUCCESSFUL.'       $
	     OUTPUT, C'X START POS: ', 'START-X'			  $
	     OUTPUT, C'X   END POS: ', 'END-X'	         		  $
	     OUTPUT, C'Y START POS: ', 'START-Y'			  $
	     OUTPUT, C'Y   END POS: ', 'END-Y'			          $
     	ELSE								  $
	     OUTPUT, C'ERROR CODE: ', 'VID-ERROR-CODE'			  $
             OUTPUT, C'ERROR DESCRIPTION: ', 'VID-RETURN-STRING'          $
        END, IF                                                           $	
C                                                                         $
 	INPUT, GO-NOGO                                                    $
	PERFORM, 'CLRSCR'                                                 $ 
C								         $
	PERFORM, 'ARBNAM' (C'REMOVE', 'RETURN_STATUS','RETURN_STRING')    $ 
     	IF, ('RETURN_STATUS' NE 0), THEN				  $
	     OUTPUT, C'ARBNAM REMOVE ERROR CODE: ', 'RETURN_STATUS'	  $
             OUTPUT, C'ARBNAM REMOVE ERROR DESCRIPTION: ', 'RETURN_STRING'$
        END, IF                                                           $
C								         $
	OUTPUT, C' \LF\ \LF\',
         C'************* OPERATOR INSTRUCTIONS ***********',
         C'\LF\ \LF\',
         C'  1. LEAVE THE CAMERA VIDEO INPUT CONNECTED TO ARB-OUT.',
         C'\LF\ \LF\',
         C'  LOADING ARB VIDEO FILES. PLEASE WAIT...',
         C' \LF\ \LF\' $
E50000 CALCULATE, 'ARB_FILE' = C'BlkCross.Arb'                              $
C									  $
C********************       LOAD RS-343A SIGNAL       ********************$
 	PERFORM, 'ARBNAM' ('ARB_FILE', 'RETURN_STATUS','RETURN_STRING')   $
     	IF, ('RETURN_STATUS' NE 0), THEN				  $
	     OUTPUT, C'ARBNAM RS-343A ERROR CODE: ', 'RETURN_STATUS'	  $
             OUTPUT, C'ARBNAM RS-343A ERROR DESCRIPTION: ', 'RETURN_STRING'$
        END, IF                                                           $
	OUTPUT, C' \LF\ \LF\',
	 C' TESTING ALIGNMENT MODE USING AN RS-343A SIGNAL.',
	 C' \LF\ \LF\ \LF\ \LF\',
         C'                     **** PRESS ENTER TO CONTINUE ***',
         C' \LF\'                                                         $
C									  $
	INPUT, GO-NOGO                                                    $
	PERFORM, 'CLRSCR'                                                 $
C									  $
C************ ASSIGN ALIGNMENT DATA TO BE PASSED TO VIDDISPLAY  **********$			
C								          $
E60000 CALCULATE, 
 'MODE' = C'ALIGN', 	
 'TYPE' = C'RS343A', 			
 'INSTRUCTIONS' = C'THOSE ATS GUYS SURE ARE SMART.',
 'HELP-FILE' = C'HELP.BMP',
 'HELP-TEXT' = C'HELP A GUY OUT HERE.' $

C 		     						          $
C**************** PASS ARGUMENTS AND RETURN ERROR CODE *******************$
C									  $
  	PERFORM, 'VIDDISPLAYNAM' ('MODE', 'TYPE', 'INSTRUCTIONS', 
				 'HELP-FILE', 'HELP-TEXT', 
			         'VID-ERROR-CODE', 'VID-RETURN-STRING')   $
C									  $
     	IF, ('VID-ERROR-CODE' EQ 0), THEN				  $
             OUTPUT, C'ALIGNMENT MODE TEST WAS SUCCESSFUL.'               $
     	ELSE								  $
	     OUTPUT, C'ERROR CODE: ', 'VID-ERROR-CODE'			  $
             OUTPUT, C'ERROR DESCRIPTION: ', 'VID-RETURN-STRING'          $
        END, IF                                                           $
	OUTPUT, C' \LF\ \LF\',
	 C'  TESTING DISPLAY ONLY MODE USING AN RS-343A SIGNAL.',
	 C' \LF\ \LF\ \LF\ \LF\',
         C'         **** PRESS ENTER TO CONTINUE ***',
         C' \LF\'                                                         $
C									  $
	INPUT, GO-NOGO                                                    $
	PERFORM, 'CLRSCR'                                                 $
C									  $
E70000 CALCULATE, 
 'MODE' = C'DISPLAY_ONLY',
 'TYPE' = C'RS343A',
 'INSTRUCTIONS' = C'DME DOES IT AGAIN!'$
C									  $
  	PERFORM, 'VIDDISPLAYNAM' ('MODE', 'TYPE', 'INSTRUCTIONS', 
			      'VID-ERROR-CODE', 'VID-RETURN-STRING')      $
C									  $
     	IF, ('VID-ERROR-CODE' EQ 0), THEN				  $
             OUTPUT, C'DISPLAY ONLY MODE TEST WAS SUCCESSFUL.'            $
     	ELSE								  $
	     OUTPUT, C'ERROR CODE: ', 'VID-ERROR-CODE'			  $
             OUTPUT, C'ERROR DESCRIPTION: ', 'VID-RETURN-STRING'          $
        END, IF                                                           $
 	OUTPUT, C' \LF\\LF\',
	     C'DISCONNET ALL CABLES FROM THE SAIF.'     		  $
C									  $
 	INPUT, GO-NOGO	                                                  $
	PERFORM, 'ARBNAM' (C'REMOVE', 'RETURN_STATUS','RETURN_STRING')    $
     	IF, ('RETURN_STATUS' NE 0), THEN				  $
	     OUTPUT, C'ARBNAM REMOVE ERROR CODE: ', 'RETURN_STATUS'	  $
             OUTPUT, C'ARBNAM REMOVE ERROR DESCRIPTION: ', 'RETURN_STRING'$
        END, IF                                                           $	
 	PERFORM, 'CLRSCR'                                                 $
C									  $	
C									  $
C									  $
 999999	 TERMINATE, ATLAS PROGRAM 'NAM-VIDDISPLAY'                            $
