/* soapClient.cpp
   Generated by gSOAP 2.7.6c from atxml.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.6c 2006-03-28 15:47:04 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__Initialize(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *ProcType, char *ProcUuid, int Pid, int *result)
{	struct atxml__Initialize soap_tmp_atxml__Initialize;
	struct atxml__InitializeResponse *soap_tmp_atxml__InitializeResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__Initialize.ProcType = ProcType;
	soap_tmp_atxml__Initialize.ProcUuid = ProcUuid;
	soap_tmp_atxml__Initialize.Pid = Pid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__Initialize(soap, &soap_tmp_atxml__Initialize);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__Initialize(soap, &soap_tmp_atxml__Initialize, "atxml:Initialize", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__Initialize(soap, &soap_tmp_atxml__Initialize, "atxml:Initialize", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_atxml__InitializeResponse = soap_get_atxml__InitializeResponse(soap, NULL, "atxml:InitializeResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (result && soap_tmp_atxml__InitializeResponse->result)
		*result = *soap_tmp_atxml__InitializeResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__Close(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *ProcUuid, int Pid, int *result)
{	struct atxml__Close soap_tmp_atxml__Close;
	struct atxml__CloseResponse *soap_tmp_atxml__CloseResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__Close.Handle = Handle;
	soap_tmp_atxml__Close.ProcUuid = ProcUuid;
	soap_tmp_atxml__Close.Pid = Pid;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__Close(soap, &soap_tmp_atxml__Close);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__Close(soap, &soap_tmp_atxml__Close, "atxml:Close", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__Close(soap, &soap_tmp_atxml__Close, "atxml:Close", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_atxml__CloseResponse = soap_get_atxml__CloseResponse(soap, NULL, "atxml:CloseResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (result && soap_tmp_atxml__CloseResponse->result)
		*result = *soap_tmp_atxml__CloseResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterInterUsed(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InterUsage, int *result)
{	struct atxml__RegisterInterUsed soap_tmp_atxml__RegisterInterUsed;
	struct atxml__RegisterInterUsedResponse *soap_tmp_atxml__RegisterInterUsedResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RegisterInterUsed.Handle = Handle;
	soap_tmp_atxml__RegisterInterUsed.InterUsage = InterUsage;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterInterUsed(soap, &soap_tmp_atxml__RegisterInterUsed);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterInterUsed(soap, &soap_tmp_atxml__RegisterInterUsed, "atxml:RegisterInterUsed", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterInterUsed(soap, &soap_tmp_atxml__RegisterInterUsed, "atxml:RegisterInterUsed", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_atxml__RegisterInterUsedResponse = soap_get_atxml__RegisterInterUsedResponse(soap, NULL, "atxml:RegisterInterUsedResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (result && soap_tmp_atxml__RegisterInterUsedResponse->result)
		*result = *soap_tmp_atxml__RegisterInterUsedResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RetrieveTpsData(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, struct atxml__RetrieveTpsDataResponse &r)
{	struct atxml__RetrieveTpsData soap_tmp_atxml__RetrieveTpsData;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RetrieveTpsData.Handle = Handle;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RetrieveTpsData(soap, &soap_tmp_atxml__RetrieveTpsData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RetrieveTpsData(soap, &soap_tmp_atxml__RetrieveTpsData, "atxml:RetrieveTpsData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RetrieveTpsData(soap, &soap_tmp_atxml__RetrieveTpsData, "atxml:RetrieveTpsData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__RetrieveTpsDataResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__RetrieveTpsDataResponse(soap, &r, "atxml:RetrieveTpsDataResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterTSF(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TSFSignalDefinition, char *TSFLibrary, char *STDTSF, char *STDBSC, int *result)
{	struct atxml__RegisterTSF soap_tmp_atxml__RegisterTSF;
	struct atxml__RegisterTSFResponse *soap_tmp_atxml__RegisterTSFResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RegisterTSF.Handle = Handle;
	soap_tmp_atxml__RegisterTSF.TSFSignalDefinition = TSFSignalDefinition;
	soap_tmp_atxml__RegisterTSF.TSFLibrary = TSFLibrary;
	soap_tmp_atxml__RegisterTSF.STDTSF = STDTSF;
	soap_tmp_atxml__RegisterTSF.STDBSC = STDBSC;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterTSF(soap, &soap_tmp_atxml__RegisterTSF);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterTSF(soap, &soap_tmp_atxml__RegisterTSF, "atxml:RegisterTSF", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterTSF(soap, &soap_tmp_atxml__RegisterTSF, "atxml:RegisterTSF", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_atxml__RegisterTSFResponse = soap_get_atxml__RegisterTSFResponse(soap, NULL, "atxml:RegisterTSFResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (result && soap_tmp_atxml__RegisterTSFResponse->result)
		*result = *soap_tmp_atxml__RegisterTSFResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__ValidateRequirements(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TestRequirements, char *Allocation, int BufferSize, struct atxml__ValidateRequirementsResponse &r)
{	struct atxml__ValidateRequirements soap_tmp_atxml__ValidateRequirements;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__ValidateRequirements.Handle = Handle;
	soap_tmp_atxml__ValidateRequirements.TestRequirements = TestRequirements;
	soap_tmp_atxml__ValidateRequirements.Allocation = Allocation;
	soap_tmp_atxml__ValidateRequirements.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__ValidateRequirements(soap, &soap_tmp_atxml__ValidateRequirements);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__ValidateRequirements(soap, &soap_tmp_atxml__ValidateRequirements, "atxml:ValidateRequirements", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__ValidateRequirements(soap, &soap_tmp_atxml__ValidateRequirements, "atxml:ValidateRequirements", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__ValidateRequirementsResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__ValidateRequirementsResponse(soap, &r, "atxml:ValidateRequirementsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterRemoveSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *RemoveSequence, int BufferSize, struct atxml__RegisterRemoveSequenceResponse &r)
{	struct atxml__RegisterRemoveSequence soap_tmp_atxml__RegisterRemoveSequence;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RegisterRemoveSequence.Handle = Handle;
	soap_tmp_atxml__RegisterRemoveSequence.RemoveSequence = RemoveSequence;
	soap_tmp_atxml__RegisterRemoveSequence.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterRemoveSequence(soap, &soap_tmp_atxml__RegisterRemoveSequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterRemoveSequence(soap, &soap_tmp_atxml__RegisterRemoveSequence, "atxml:RegisterRemoveSequence", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterRemoveSequence(soap, &soap_tmp_atxml__RegisterRemoveSequence, "atxml:RegisterRemoveSequence", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__RegisterRemoveSequenceResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__RegisterRemoveSequenceResponse(soap, &r, "atxml:RegisterRemoveSequenceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterApplySequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *ApplySequence, int BufferSize, struct atxml__RegisterApplySequenceResponse &r)
{	struct atxml__RegisterApplySequence soap_tmp_atxml__RegisterApplySequence;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RegisterApplySequence.Handle = Handle;
	soap_tmp_atxml__RegisterApplySequence.ApplySequence = ApplySequence;
	soap_tmp_atxml__RegisterApplySequence.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterApplySequence(soap, &soap_tmp_atxml__RegisterApplySequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterApplySequence(soap, &soap_tmp_atxml__RegisterApplySequence, "atxml:RegisterApplySequence", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterApplySequence(soap, &soap_tmp_atxml__RegisterApplySequence, "atxml:RegisterApplySequence", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__RegisterApplySequenceResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__RegisterApplySequenceResponse(soap, &r, "atxml:RegisterApplySequenceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}


SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__TestStationStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__TestStationStatusResponse &r)
{	struct atxml__TestStationStatus soap_tmp_atxml__TestStationStatus;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__TestStationStatus.Handle = Handle;
	soap_tmp_atxml__TestStationStatus.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__TestStationStatus(soap, &soap_tmp_atxml__TestStationStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__TestStationStatus(soap, &soap_tmp_atxml__TestStationStatus, "atxml:TestStationStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__TestStationStatus(soap, &soap_tmp_atxml__TestStationStatus, "atxml:TestStationStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__TestStationStatusResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__TestStationStatusResponse(soap, &r, "atxml:TestStationStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterInstStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InstStatus, int BufferSize, struct atxml__RegisterInstStatusResponse &r)
{	struct atxml__RegisterInstStatus soap_tmp_atxml__RegisterInstStatus;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RegisterInstStatus.Handle = Handle;
	soap_tmp_atxml__RegisterInstStatus.InstStatus = InstStatus;
	soap_tmp_atxml__RegisterInstStatus.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterInstStatus(soap, &soap_tmp_atxml__RegisterInstStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterInstStatus(soap, &soap_tmp_atxml__RegisterInstStatus, "atxml:RegisterInstStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterInstStatus(soap, &soap_tmp_atxml__RegisterInstStatus, "atxml:RegisterInstStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__RegisterInstStatusResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__RegisterInstStatusResponse(soap, &r, "atxml:RegisterInstStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterTmaSelect(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TmaList, int *result)
{	struct atxml__RegisterTmaSelect soap_tmp_atxml__RegisterTmaSelect;
	struct atxml__RegisterTmaSelectResponse *soap_tmp_atxml__RegisterTmaSelectResponse;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__RegisterTmaSelect.Handle = Handle;
	soap_tmp_atxml__RegisterTmaSelect.TmaList = TmaList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterTmaSelect(soap, &soap_tmp_atxml__RegisterTmaSelect);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterTmaSelect(soap, &soap_tmp_atxml__RegisterTmaSelect, "atxml:RegisterTmaSelect", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterTmaSelect(soap, &soap_tmp_atxml__RegisterTmaSelect, "atxml:RegisterTmaSelect", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_int(soap, result);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_atxml__RegisterTmaSelectResponse = soap_get_atxml__RegisterTmaSelectResponse(soap, NULL, "atxml:RegisterTmaSelectResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	if (result && soap_tmp_atxml__RegisterTmaSelectResponse->result)
		*result = *soap_tmp_atxml__RegisterTmaSelectResponse->result;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__SubmitUutId(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *UUT_Partnumber, char *UUT_Serialnumber, int TmaBufferSize, int RaBufferSize, struct atxml__SubmitUutIdResponse &r)
{	struct atxml__SubmitUutId soap_tmp_atxml__SubmitUutId;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__SubmitUutId.Handle = Handle;
	soap_tmp_atxml__SubmitUutId.UUT_Partnumber = UUT_Partnumber;
	soap_tmp_atxml__SubmitUutId.UUT_Serialnumber = UUT_Serialnumber;
	soap_tmp_atxml__SubmitUutId.TmaBufferSize = TmaBufferSize;
	soap_tmp_atxml__SubmitUutId.RaBufferSize = RaBufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__SubmitUutId(soap, &soap_tmp_atxml__SubmitUutId);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__SubmitUutId(soap, &soap_tmp_atxml__SubmitUutId, "atxml:SubmitUutId", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__SubmitUutId(soap, &soap_tmp_atxml__SubmitUutId, "atxml:SubmitUutId", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__SubmitUutIdResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__SubmitUutIdResponse(soap, &r, "atxml:SubmitUutIdResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueSignal(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *SignalDescription, int BufferSize, struct atxml__IssueSignalResponse &r)
{	struct atxml__IssueSignal soap_tmp_atxml__IssueSignal;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__IssueSignal.Handle = Handle;
	soap_tmp_atxml__IssueSignal.SignalDescription = SignalDescription;
	soap_tmp_atxml__IssueSignal.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueSignal(soap, &soap_tmp_atxml__IssueSignal);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueSignal(soap, &soap_tmp_atxml__IssueSignal, "atxml:IssueSignal", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueSignal(soap, &soap_tmp_atxml__IssueSignal, "atxml:IssueSignal", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__IssueSignalResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__IssueSignalResponse(soap, &r, "atxml:IssueSignalResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__QueryInterStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__QueryInterStatusResponse &r)
{	struct atxml__QueryInterStatus soap_tmp_atxml__QueryInterStatus;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__QueryInterStatus.Handle = Handle;
	soap_tmp_atxml__QueryInterStatus.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__QueryInterStatus(soap, &soap_tmp_atxml__QueryInterStatus);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__QueryInterStatus(soap, &soap_tmp_atxml__QueryInterStatus, "atxml:QueryInterStatus", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__QueryInterStatus(soap, &soap_tmp_atxml__QueryInterStatus, "atxml:QueryInterStatus", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__QueryInterStatusResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__QueryInterStatusResponse(soap, &r, "atxml:QueryInterStatusResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__InvokeRemoveAllSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__InvokeRemoveAllSequenceResponse &r)
{	struct atxml__InvokeRemoveAllSequence soap_tmp_atxml__InvokeRemoveAllSequence;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__InvokeRemoveAllSequence.Handle = Handle;
	soap_tmp_atxml__InvokeRemoveAllSequence.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__InvokeRemoveAllSequence(soap, &soap_tmp_atxml__InvokeRemoveAllSequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__InvokeRemoveAllSequence(soap, &soap_tmp_atxml__InvokeRemoveAllSequence, "atxml:InvokeRemoveAllSequence", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__InvokeRemoveAllSequence(soap, &soap_tmp_atxml__InvokeRemoveAllSequence, "atxml:InvokeRemoveAllSequence", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__InvokeRemoveAllSequenceResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__InvokeRemoveAllSequenceResponse(soap, &r, "atxml:InvokeRemoveAllSequenceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__InvokeApplyAllSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__InvokeApplyAllSequenceResponse &r)
{	struct atxml__InvokeApplyAllSequence soap_tmp_atxml__InvokeApplyAllSequence;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__InvokeApplyAllSequence.Handle = Handle;
	soap_tmp_atxml__InvokeApplyAllSequence.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__InvokeApplyAllSequence(soap, &soap_tmp_atxml__InvokeApplyAllSequence);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__InvokeApplyAllSequence(soap, &soap_tmp_atxml__InvokeApplyAllSequence, "atxml:InvokeApplyAllSequence", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__InvokeApplyAllSequence(soap, &soap_tmp_atxml__InvokeApplyAllSequence, "atxml:InvokeApplyAllSequence", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__InvokeApplyAllSequenceResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__InvokeApplyAllSequenceResponse(soap, &r, "atxml:InvokeApplyAllSequenceResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}


SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueTestResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TestResults, int TPS_Status, int BufferSize, struct atxml__IssueTestResultsResponse &r)
{	struct atxml__IssueTestResults soap_tmp_atxml__IssueTestResults;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__IssueTestResults.Handle = Handle;
	soap_tmp_atxml__IssueTestResults.TestResults = TestResults;
	soap_tmp_atxml__IssueTestResults.TPS_Status = TPS_Status;
	soap_tmp_atxml__IssueTestResults.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueTestResults(soap, &soap_tmp_atxml__IssueTestResults);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueTestResults(soap, &soap_tmp_atxml__IssueTestResults, "atxml:IssueTestResults", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueTestResults(soap, &soap_tmp_atxml__IssueTestResults, "atxml:IssueTestResults", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__IssueTestResultsResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__IssueTestResultsResponse(soap, &r, "atxml:IssueTestResultsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueTestResultsFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TestResultsFile, int TPS_Status, int BufferSize, struct atxml__IssueTestResultsFileResponse &r)
{	struct atxml__IssueTestResultsFile soap_tmp_atxml__IssueTestResultsFile;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__IssueTestResultsFile.Handle = Handle;
	soap_tmp_atxml__IssueTestResultsFile.TestResultsFile = TestResultsFile;
	soap_tmp_atxml__IssueTestResultsFile.TPS_Status = TPS_Status;
	soap_tmp_atxml__IssueTestResultsFile.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueTestResultsFile(soap, &soap_tmp_atxml__IssueTestResultsFile);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueTestResultsFile(soap, &soap_tmp_atxml__IssueTestResultsFile, "atxml:IssueTestResultsFile", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueTestResultsFile(soap, &soap_tmp_atxml__IssueTestResultsFile, "atxml:IssueTestResultsFile", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__IssueTestResultsFileResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__IssueTestResultsFileResponse(soap, &r, "atxml:IssueTestResultsFileResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueIst(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InstSelfTest, int BufferSize, struct atxml__IssueIstResponse &r)
{	struct atxml__IssueIst soap_tmp_atxml__IssueIst;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__IssueIst.Handle = Handle;
	soap_tmp_atxml__IssueIst.InstSelfTest = InstSelfTest;
	soap_tmp_atxml__IssueIst.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueIst(soap, &soap_tmp_atxml__IssueIst);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueIst(soap, &soap_tmp_atxml__IssueIst, "atxml:IssueIst", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueIst(soap, &soap_tmp_atxml__IssueIst, "atxml:IssueIst", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__IssueIstResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__IssueIstResponse(soap, &r, "atxml:IssueIstResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueNativeCmds(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InstrumentCmds, int BufferSize, struct atxml__IssueNativeCmdsResponse &r)
{	struct atxml__IssueNativeCmds soap_tmp_atxml__IssueNativeCmds;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__IssueNativeCmds.Handle = Handle;
	soap_tmp_atxml__IssueNativeCmds.InstrumentCmds = InstrumentCmds;
	soap_tmp_atxml__IssueNativeCmds.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueNativeCmds(soap, &soap_tmp_atxml__IssueNativeCmds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueNativeCmds(soap, &soap_tmp_atxml__IssueNativeCmds, "atxml:IssueNativeCmds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueNativeCmds(soap, &soap_tmp_atxml__IssueNativeCmds, "atxml:IssueNativeCmds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__IssueNativeCmdsResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__IssueNativeCmdsResponse(soap, &r, "atxml:IssueNativeCmdsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueDriverFunctionCall(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *DriverFunction, int BufferSize, struct atxml__IssueDriverFunctionCallResponse &r)
{	struct atxml__IssueDriverFunctionCall soap_tmp_atxml__IssueDriverFunctionCall;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:7014/";
	soap->encodingStyle = NULL;
	soap_tmp_atxml__IssueDriverFunctionCall.Handle = Handle;
	soap_tmp_atxml__IssueDriverFunctionCall.DriverFunction = DriverFunction;
	soap_tmp_atxml__IssueDriverFunctionCall.BufferSize = BufferSize;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueDriverFunctionCall(soap, &soap_tmp_atxml__IssueDriverFunctionCall);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueDriverFunctionCall(soap, &soap_tmp_atxml__IssueDriverFunctionCall, "atxml:IssueDriverFunctionCall", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueDriverFunctionCall(soap, &soap_tmp_atxml__IssueDriverFunctionCall, "atxml:IssueDriverFunctionCall", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	soap_default_atxml__IssueDriverFunctionCallResponse(soap, &r);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_get_atxml__IssueDriverFunctionCallResponse(soap, &r, "atxml:IssueDriverFunctionCallResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
