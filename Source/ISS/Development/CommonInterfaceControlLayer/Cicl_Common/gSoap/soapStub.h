/* soapStub.h
   Generated by gSOAP 2.7.6c from atxml.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_atxml__InitializeResponse
#define SOAP_TYPE_atxml__InitializeResponse (9)
/* atxml:InitializeResponse */
struct atxml__InitializeResponse
{
	int *result;	/* RPC return element */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__Initialize
#define SOAP_TYPE_atxml__Initialize (10)
/* atxml:Initialize */
struct atxml__Initialize
{
	char *ProcType;	/* optional element of type xsd:string */
	char *ProcUuid;	/* optional element of type xsd:string */
	int Pid;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__CloseResponse
#define SOAP_TYPE_atxml__CloseResponse (12)
/* atxml:CloseResponse */
struct atxml__CloseResponse
{
	int *result;	/* RPC return element */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__Close
#define SOAP_TYPE_atxml__Close (13)
/* atxml:Close */
struct atxml__Close
{
	int Handle;	/* required element of type xsd:int */
	char *ProcUuid;	/* optional element of type xsd:string */
	int Pid;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterInterUsedResponse
#define SOAP_TYPE_atxml__RegisterInterUsedResponse (15)
/* atxml:RegisterInterUsedResponse */
struct atxml__RegisterInterUsedResponse
{
	int *result;	/* RPC return element */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterInterUsed
#define SOAP_TYPE_atxml__RegisterInterUsed (16)
/* atxml:RegisterInterUsed */
struct atxml__RegisterInterUsed
{
	int Handle;	/* required element of type xsd:int */
	char *InterUsage;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_atxml__RetrieveTpsDataResponse
#define SOAP_TYPE_atxml__RetrieveTpsDataResponse (17)
/* atxml:RetrieveTpsDataResponse */
struct atxml__RetrieveTpsDataResponse
{
	char *TpsName;	/* RPC return element */	/* optional element of type xsd:string */
	char *TpsVersion;	/* optional element of type xsd:string */
	char *TpsFileName;	/* optional element of type xsd:string */
	char *RecommendedAction;	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RetrieveTpsData
#define SOAP_TYPE_atxml__RetrieveTpsData (20)
/* atxml:RetrieveTpsData */
struct atxml__RetrieveTpsData
{
	int Handle;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterTSFResponse
#define SOAP_TYPE_atxml__RegisterTSFResponse (22)
/* atxml:RegisterTSFResponse */
struct atxml__RegisterTSFResponse
{
	int *result;	/* RPC return element */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterTSF
#define SOAP_TYPE_atxml__RegisterTSF (23)
/* atxml:RegisterTSF */
struct atxml__RegisterTSF
{
	int Handle;	/* required element of type xsd:int */
	char *TSFSignalDefinition;	/* optional element of type xsd:string */
	char *TSFLibrary;	/* optional element of type xsd:string */
	char *STDTSF;	/* optional element of type xsd:string */
	char *STDBSC;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_atxml__ValidateRequirementsResponse
#define SOAP_TYPE_atxml__ValidateRequirementsResponse (24)
/* atxml:ValidateRequirementsResponse */
struct atxml__ValidateRequirementsResponse
{
	char *Availability;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__ValidateRequirements
#define SOAP_TYPE_atxml__ValidateRequirements (27)
/* atxml:ValidateRequirements */
struct atxml__ValidateRequirements
{
	int Handle;	/* required element of type xsd:int */
	char *TestRequirements;	/* optional element of type xsd:string */
	char *Allocation;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterRemoveSequenceResponse
#define SOAP_TYPE_atxml__RegisterRemoveSequenceResponse (28)
/* atxml:RegisterRemoveSequenceResponse */
struct atxml__RegisterRemoveSequenceResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterRemoveSequence
#define SOAP_TYPE_atxml__RegisterRemoveSequence (31)
/* atxml:RegisterRemoveSequence */
struct atxml__RegisterRemoveSequence
{
	int Handle;	/* required element of type xsd:int */
	char *RemoveSequence;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__TestStationStatusResponse
#define SOAP_TYPE_atxml__TestStationStatusResponse (32)
/* atxml:TestStationStatusResponse */
struct atxml__TestStationStatusResponse
{
	char *TestStationStatus;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__TestStationStatus
#define SOAP_TYPE_atxml__TestStationStatus (35)
/* atxml:TestStationStatus */
struct atxml__TestStationStatus
{
	int Handle;	/* required element of type xsd:int */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterInstStatusResponse
#define SOAP_TYPE_atxml__RegisterInstStatusResponse (36)
/* atxml:RegisterInstStatusResponse */
struct atxml__RegisterInstStatusResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterInstStatus
#define SOAP_TYPE_atxml__RegisterInstStatus (39)
/* atxml:RegisterInstStatus */
struct atxml__RegisterInstStatus
{
	int Handle;	/* required element of type xsd:int */
	char *InstStatus;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterTmaSelectResponse
#define SOAP_TYPE_atxml__RegisterTmaSelectResponse (41)
/* atxml:RegisterTmaSelectResponse */
struct atxml__RegisterTmaSelectResponse
{
	int *result;	/* RPC return element */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterTmaSelect
#define SOAP_TYPE_atxml__RegisterTmaSelect (42)
/* atxml:RegisterTmaSelect */
struct atxml__RegisterTmaSelect
{
	int Handle;	/* required element of type xsd:int */
	char *TmaList;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_atxml__SubmitUutIdResponse
#define SOAP_TYPE_atxml__SubmitUutIdResponse (43)
/* atxml:SubmitUutIdResponse */
struct atxml__SubmitUutIdResponse
{
	int Action;	/* RPC return element */	/* required element of type xsd:int */
	char *cTmaList;	/* optional element of type xsd:string */
	int TmaBufferSize;	/* required element of type xsd:int */
	char *RecommendedActions;	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__SubmitUutId
#define SOAP_TYPE_atxml__SubmitUutId (46)
/* atxml:SubmitUutId */
struct atxml__SubmitUutId
{
	int Handle;	/* required element of type xsd:int */
	char *UUT_Partnumber;	/* optional element of type xsd:string */
	char *UUT_Serialnumber;	/* optional element of type xsd:string */
	int TmaBufferSize;	/* required element of type xsd:int */
	int RaBufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueSignalResponse
#define SOAP_TYPE_atxml__IssueSignalResponse (47)
/* atxml:IssueSignalResponse */
struct atxml__IssueSignalResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueSignal
#define SOAP_TYPE_atxml__IssueSignal (50)
/* atxml:IssueSignal */
struct atxml__IssueSignal
{
	int Handle;	/* required element of type xsd:int */
	char *SignalDescription;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__QueryInterStatusResponse
#define SOAP_TYPE_atxml__QueryInterStatusResponse (51)
/* atxml:QueryInterStatusResponse */
struct atxml__QueryInterStatusResponse
{
	char *InterStatus;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__QueryInterStatus
#define SOAP_TYPE_atxml__QueryInterStatus (54)
/* atxml:QueryInterStatus */
struct atxml__QueryInterStatus
{
	int Handle;	/* required element of type xsd:int */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__InvokeRemoveAllSequenceResponse
#define SOAP_TYPE_atxml__InvokeRemoveAllSequenceResponse (55)
/* atxml:InvokeRemoveAllSequenceResponse */
struct atxml__InvokeRemoveAllSequenceResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__InvokeRemoveAllSequence
#define SOAP_TYPE_atxml__InvokeRemoveAllSequence (58)
/* atxml:InvokeRemoveAllSequence */
struct atxml__InvokeRemoveAllSequence
{
	int Handle;	/* required element of type xsd:int */
	int BufferSize;	/* required element of type xsd:int */
};
#endif


#ifndef SOAP_TYPE_atxml__IssueTestResultsResponse
#define SOAP_TYPE_atxml__IssueTestResultsResponse (59)
/* atxml:IssueTestResultsResponse */
struct atxml__IssueTestResultsResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueTestResults
#define SOAP_TYPE_atxml__IssueTestResults (62)
/* atxml:IssueTestResults */
struct atxml__IssueTestResults
{
	int Handle;	/* required element of type xsd:int */
	char *TestResults;	/* optional element of type xsd:string */
	int TPS_Status;	/* required element of type xsd:int */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueTestResultsFileResponse
#define SOAP_TYPE_atxml__IssueTestResultsFileResponse (63)
/* atxml:IssueTestResultsFileResponse */
struct atxml__IssueTestResultsFileResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueTestResultsFile
#define SOAP_TYPE_atxml__IssueTestResultsFile (66)
/* atxml:IssueTestResultsFile */
struct atxml__IssueTestResultsFile
{
	int Handle;	/* required element of type xsd:int */
	char *TestResultsFile;	/* optional element of type xsd:string */
	int TPS_Status;	/* required element of type xsd:int */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueIstResponse
#define SOAP_TYPE_atxml__IssueIstResponse (67)
/* atxml:IssueIstResponse */
struct atxml__IssueIstResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueIst
#define SOAP_TYPE_atxml__IssueIst (70)
/* atxml:IssueIst */
struct atxml__IssueIst
{
	int Handle;	/* required element of type xsd:int */
	char *InstSelfTest;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueNativeCmdsResponse
#define SOAP_TYPE_atxml__IssueNativeCmdsResponse (71)
/* atxml:IssueNativeCmdsResponse */
struct atxml__IssueNativeCmdsResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueNativeCmds
#define SOAP_TYPE_atxml__IssueNativeCmds (74)
/* atxml:IssueNativeCmds */
struct atxml__IssueNativeCmds
{
	int Handle;	/* required element of type xsd:int */
	char *InstrumentCmds;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueDriverFunctionCallResponse
#define SOAP_TYPE_atxml__IssueDriverFunctionCallResponse (75)
/* atxml:IssueDriverFunctionCallResponse */
struct atxml__IssueDriverFunctionCallResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__IssueDriverFunctionCall
#define SOAP_TYPE_atxml__IssueDriverFunctionCall (78)
/* atxml:IssueDriverFunctionCall */
struct atxml__IssueDriverFunctionCall
{
	int Handle;	/* required element of type xsd:int */
	char *DriverFunction;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (81)
/* SOAP Header: */
struct SOAP_ENV__Header
{
	void *dummy;	/* transient */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (82)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (84)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (85)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (86)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterApplySequenceResponse
#define SOAP_TYPE_atxml__RegisterApplySequenceResponse (87)
/* atxml:RegisterApplySequenceResponse */
struct atxml__RegisterApplySequenceResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__RegisterApplySequence
#define SOAP_TYPE_atxml__RegisterApplySequence (91)
/* atxml:RegisterApplySequence */
struct atxml__RegisterApplySequence
{
	int Handle;	/* required element of type xsd:int */
	char *ApplySequence;	/* optional element of type xsd:string */
	int BufferSize;	/* required element of type xsd:int */
};
#endif


#ifndef SOAP_TYPE_atxml__InvokeApplyAllSequenceResponse
#define SOAP_TYPE_atxml__InvokeApplyAllSequenceResponse (89)
/* atxml:InvokeApplyAllSequenceResponse */
struct atxml__InvokeApplyAllSequenceResponse
{
	char *Response;	/* RPC return element */	/* optional element of type xsd:string */
	int result;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_atxml__InvokeApplyAllSequence
#define SOAP_TYPE_atxml__InvokeApplyAllSequence (90)
/* atxml:InvokeApplyAllSequence */
struct atxml__InvokeApplyAllSequence
{
	int Handle;	/* required element of type xsd:int */
	int BufferSize;	/* required element of type xsd:int */
};
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (6)
typedef char *xsd__string;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 atxml__Initialize(struct soap*, char *ProcType, char *ProcUuid, int Pid, int *result);

SOAP_FMAC5 int SOAP_FMAC6 atxml__Close(struct soap*, int Handle, char *ProcUuid, int Pid, int *result);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RegisterInterUsed(struct soap*, int Handle, char *InterUsage, int *result);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RetrieveTpsData(struct soap*, int Handle, struct atxml__RetrieveTpsDataResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RegisterTSF(struct soap*, int Handle, char *TSFSignalDefinition, char *TSFLibrary, char *STDTSF, char *STDBSC, int *result);

SOAP_FMAC5 int SOAP_FMAC6 atxml__ValidateRequirements(struct soap*, int Handle, char *TestRequirements, char *Allocation, int BufferSize, struct atxml__ValidateRequirementsResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RegisterRemoveSequence(struct soap*, int Handle, char *RemoveSequence, int BufferSize, struct atxml__RegisterRemoveSequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RegisterApplySequence(struct soap*, int Handle, char *ApplySequence, int BufferSize, struct atxml__RegisterApplySequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__TestStationStatus(struct soap*, int Handle, int BufferSize, struct atxml__TestStationStatusResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RegisterInstStatus(struct soap*, int Handle, char *InstStatus, int BufferSize, struct atxml__RegisterInstStatusResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__RegisterTmaSelect(struct soap*, int Handle, char *TmaList, int *result);

SOAP_FMAC5 int SOAP_FMAC6 atxml__SubmitUutId(struct soap*, int Handle, char *UUT_Partnumber, char *UUT_Serialnumber, int TmaBufferSize, int RaBufferSize, struct atxml__SubmitUutIdResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__IssueSignal(struct soap*, int Handle, char *SignalDescription, int BufferSize, struct atxml__IssueSignalResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__QueryInterStatus(struct soap*, int Handle, int BufferSize, struct atxml__QueryInterStatusResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__InvokeRemoveAllSequence(struct soap*, int Handle, int BufferSize, struct atxml__InvokeRemoveAllSequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__InvokeApplyAllSequence(struct soap*, int Handle, int BufferSize, struct atxml__InvokeApplyAllSequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__IssueTestResults(struct soap*, int Handle, char *TestResults, int TPS_Status, int BufferSize, struct atxml__IssueTestResultsResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__IssueTestResultsFile(struct soap*, int Handle, char *TestResultsFile, int TPS_Status, int BufferSize, struct atxml__IssueTestResultsFileResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__IssueIst(struct soap*, int Handle, char *InstSelfTest, int BufferSize, struct atxml__IssueIstResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__IssueNativeCmds(struct soap*, int Handle, char *InstrumentCmds, int BufferSize, struct atxml__IssueNativeCmdsResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 atxml__IssueDriverFunctionCall(struct soap*, int Handle, char *DriverFunction, int BufferSize, struct atxml__IssueDriverFunctionCallResponse &r);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__Initialize(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *ProcType, char *ProcUuid, int Pid, int *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__Close(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *ProcUuid, int Pid, int *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterInterUsed(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InterUsage, int *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RetrieveTpsData(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, struct atxml__RetrieveTpsDataResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterTSF(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TSFSignalDefinition, char *TSFLibrary, char *STDTSF, char *STDBSC, int *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__ValidateRequirements(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TestRequirements, char *Allocation, int BufferSize, struct atxml__ValidateRequirementsResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterRemoveSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *RemoveSequence, int BufferSize, struct atxml__RegisterRemoveSequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterApplySequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *ApplySequence, int BufferSize, struct atxml__RegisterApplySequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__TestStationStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__TestStationStatusResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterInstStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InstStatus, int BufferSize, struct atxml__RegisterInstStatusResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__RegisterTmaSelect(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TmaList, int *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__SubmitUutId(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *UUT_Partnumber, char *UUT_Serialnumber, int TmaBufferSize, int RaBufferSize, struct atxml__SubmitUutIdResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueSignal(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *SignalDescription, int BufferSize, struct atxml__IssueSignalResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__QueryInterStatus(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__QueryInterStatusResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__InvokeRemoveAllSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__InvokeRemoveAllSequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__InvokeApplyAllSequence(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, int BufferSize, struct atxml__InvokeApplyAllSequenceResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueTestResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TestResults, int TPS_Status, int BufferSize, struct atxml__IssueTestResultsResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueTestResultsFile(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *TestResultsFile, int TPS_Status, int BufferSize, struct atxml__IssueTestResultsFileResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueIst(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InstSelfTest, int BufferSize, struct atxml__IssueIstResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueNativeCmds(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *InstrumentCmds, int BufferSize, struct atxml__IssueNativeCmdsResponse &r);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_atxml__IssueDriverFunctionCall(struct soap *soap, const char *soap_endpoint, const char *soap_action, int Handle, char *DriverFunction, int BufferSize, struct atxml__IssueDriverFunctionCallResponse &r);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__Initialize(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__Close(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterInterUsed(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RetrieveTpsData(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterTSF(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__ValidateRequirements(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterRemoveSequence(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterApplySequence(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__TestStationStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterInstStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterTmaSelect(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__SubmitUutId(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueSignal(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__QueryInterStatus(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__InvokeRemoveAllSequence(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__InvokeApplyAllSequence(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueTestResults(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueTestResultsFile(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueIst(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueNativeCmds(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueDriverFunctionCall(struct soap*);

#endif

/* End of soapStub.h */
