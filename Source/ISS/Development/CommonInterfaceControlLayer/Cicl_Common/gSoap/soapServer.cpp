/* soapServer.cpp
   Generated by gSOAP 2.7.6c from atxml.h
   Copyright (C) 2000-2005, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.7.6c 2006-03-28 15:47:04 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif

	do
	{
#ifdef WITH_FASTCGI
		if (FCGI_Accept() < 0)
		{
			soap->error = SOAP_EOF;
			return soap_send_fault(soap);
		}
#endif

		soap_begin(soap);

#ifndef WITH_FASTCGI
		if (!--k)
			soap->keep_alive = 0;
#endif

		if (soap_begin_recv(soap))
		{	if (soap->error < SOAP_STOP)
			{
#ifdef WITH_FASTCGI
				soap_send_fault(soap);
#else 
				return soap_send_fault(soap);
#endif
			}
			soap_closesock(soap);

			continue;
		}

		if (soap_envelope_begin_in(soap)
		 || soap_recv_header(soap)
		 || soap_body_begin_in(soap)
		 || soap_serve_request(soap)
		 || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:Initialize"))
		return soap_serve_atxml__Initialize(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:Close"))
		return soap_serve_atxml__Close(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RegisterInterUsed"))
		return soap_serve_atxml__RegisterInterUsed(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RetrieveTpsData"))
		return soap_serve_atxml__RetrieveTpsData(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RegisterTSF"))
		return soap_serve_atxml__RegisterTSF(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:ValidateRequirements"))
		return soap_serve_atxml__ValidateRequirements(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RegisterRemoveSequence"))
		return soap_serve_atxml__RegisterRemoveSequence(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RegisterApplySequence"))
		return soap_serve_atxml__RegisterApplySequence(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:TestStationStatus"))
		return soap_serve_atxml__TestStationStatus(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RegisterInstStatus"))
		return soap_serve_atxml__RegisterInstStatus(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:RegisterTmaSelect"))
		return soap_serve_atxml__RegisterTmaSelect(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:SubmitUutId"))
		return soap_serve_atxml__SubmitUutId(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:IssueSignal"))
		return soap_serve_atxml__IssueSignal(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:QueryInterStatus"))
		return soap_serve_atxml__QueryInterStatus(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:InvokeRemoveAllSequence"))
		return soap_serve_atxml__InvokeRemoveAllSequence(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:InvokeApplyAllSequence"))
		return soap_serve_atxml__InvokeApplyAllSequence(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:IssueTestResults"))
		return soap_serve_atxml__IssueTestResults(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:IssueTestResultsFile"))
		return soap_serve_atxml__IssueTestResultsFile(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:IssueIst"))
		return soap_serve_atxml__IssueIst(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:IssueNativeCmds"))
		return soap_serve_atxml__IssueNativeCmds(soap);
	if (!soap_match_tag(soap, soap->tag, "atxml:IssueDriverFunctionCall"))
		return soap_serve_atxml__IssueDriverFunctionCall(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__Initialize(struct soap *soap)
{	struct atxml__Initialize soap_tmp_atxml__Initialize;
	struct atxml__InitializeResponse soap_tmp_atxml__InitializeResponse;
	int soap_tmp_int;
	soap_default_atxml__InitializeResponse(soap, &soap_tmp_atxml__InitializeResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_atxml__InitializeResponse.result = &soap_tmp_int;
	soap_default_atxml__Initialize(soap, &soap_tmp_atxml__Initialize);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__Initialize(soap, &soap_tmp_atxml__Initialize, "atxml:Initialize", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__Initialize(soap, soap_tmp_atxml__Initialize.ProcType, soap_tmp_atxml__Initialize.ProcUuid, soap_tmp_atxml__Initialize.Pid, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__InitializeResponse(soap, &soap_tmp_atxml__InitializeResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__InitializeResponse(soap, &soap_tmp_atxml__InitializeResponse, "atxml:InitializeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__InitializeResponse(soap, &soap_tmp_atxml__InitializeResponse, "atxml:InitializeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__Close(struct soap *soap)
{	struct atxml__Close soap_tmp_atxml__Close;
	struct atxml__CloseResponse soap_tmp_atxml__CloseResponse;
	int soap_tmp_int;
	soap_default_atxml__CloseResponse(soap, &soap_tmp_atxml__CloseResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_atxml__CloseResponse.result = &soap_tmp_int;
	soap_default_atxml__Close(soap, &soap_tmp_atxml__Close);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__Close(soap, &soap_tmp_atxml__Close, "atxml:Close", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__Close(soap, soap_tmp_atxml__Close.Handle, soap_tmp_atxml__Close.ProcUuid, soap_tmp_atxml__Close.Pid, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__CloseResponse(soap, &soap_tmp_atxml__CloseResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__CloseResponse(soap, &soap_tmp_atxml__CloseResponse, "atxml:CloseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__CloseResponse(soap, &soap_tmp_atxml__CloseResponse, "atxml:CloseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterInterUsed(struct soap *soap)
{	struct atxml__RegisterInterUsed soap_tmp_atxml__RegisterInterUsed;
	struct atxml__RegisterInterUsedResponse soap_tmp_atxml__RegisterInterUsedResponse;
	int soap_tmp_int;
	soap_default_atxml__RegisterInterUsedResponse(soap, &soap_tmp_atxml__RegisterInterUsedResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_atxml__RegisterInterUsedResponse.result = &soap_tmp_int;
	soap_default_atxml__RegisterInterUsed(soap, &soap_tmp_atxml__RegisterInterUsed);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RegisterInterUsed(soap, &soap_tmp_atxml__RegisterInterUsed, "atxml:RegisterInterUsed", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RegisterInterUsed(soap, soap_tmp_atxml__RegisterInterUsed.Handle, soap_tmp_atxml__RegisterInterUsed.InterUsage, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterInterUsedResponse(soap, &soap_tmp_atxml__RegisterInterUsedResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterInterUsedResponse(soap, &soap_tmp_atxml__RegisterInterUsedResponse, "atxml:RegisterInterUsedResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterInterUsedResponse(soap, &soap_tmp_atxml__RegisterInterUsedResponse, "atxml:RegisterInterUsedResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RetrieveTpsData(struct soap *soap)
{	struct atxml__RetrieveTpsData soap_tmp_atxml__RetrieveTpsData;
	struct atxml__RetrieveTpsDataResponse r;
	soap_default_atxml__RetrieveTpsDataResponse(soap, &r);
	soap_default_atxml__RetrieveTpsData(soap, &soap_tmp_atxml__RetrieveTpsData);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RetrieveTpsData(soap, &soap_tmp_atxml__RetrieveTpsData, "atxml:RetrieveTpsData", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RetrieveTpsData(soap, soap_tmp_atxml__RetrieveTpsData.Handle, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RetrieveTpsDataResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RetrieveTpsDataResponse(soap, &r, "atxml:RetrieveTpsDataResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RetrieveTpsDataResponse(soap, &r, "atxml:RetrieveTpsDataResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterTSF(struct soap *soap)
{	struct atxml__RegisterTSF soap_tmp_atxml__RegisterTSF;
	struct atxml__RegisterTSFResponse soap_tmp_atxml__RegisterTSFResponse;
	int soap_tmp_int;
	soap_default_atxml__RegisterTSFResponse(soap, &soap_tmp_atxml__RegisterTSFResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_atxml__RegisterTSFResponse.result = &soap_tmp_int;
	soap_default_atxml__RegisterTSF(soap, &soap_tmp_atxml__RegisterTSF);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RegisterTSF(soap, &soap_tmp_atxml__RegisterTSF, "atxml:RegisterTSF", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RegisterTSF(soap, soap_tmp_atxml__RegisterTSF.Handle, soap_tmp_atxml__RegisterTSF.TSFSignalDefinition, soap_tmp_atxml__RegisterTSF.TSFLibrary, soap_tmp_atxml__RegisterTSF.STDTSF, soap_tmp_atxml__RegisterTSF.STDBSC, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterTSFResponse(soap, &soap_tmp_atxml__RegisterTSFResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterTSFResponse(soap, &soap_tmp_atxml__RegisterTSFResponse, "atxml:RegisterTSFResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterTSFResponse(soap, &soap_tmp_atxml__RegisterTSFResponse, "atxml:RegisterTSFResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__ValidateRequirements(struct soap *soap)
{	struct atxml__ValidateRequirements soap_tmp_atxml__ValidateRequirements;
	struct atxml__ValidateRequirementsResponse r;
	soap_default_atxml__ValidateRequirementsResponse(soap, &r);
	soap_default_atxml__ValidateRequirements(soap, &soap_tmp_atxml__ValidateRequirements);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__ValidateRequirements(soap, &soap_tmp_atxml__ValidateRequirements, "atxml:ValidateRequirements", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__ValidateRequirements(soap, soap_tmp_atxml__ValidateRequirements.Handle, soap_tmp_atxml__ValidateRequirements.TestRequirements, soap_tmp_atxml__ValidateRequirements.Allocation, soap_tmp_atxml__ValidateRequirements.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__ValidateRequirementsResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__ValidateRequirementsResponse(soap, &r, "atxml:ValidateRequirementsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__ValidateRequirementsResponse(soap, &r, "atxml:ValidateRequirementsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterRemoveSequence(struct soap *soap)
{	struct atxml__RegisterRemoveSequence soap_tmp_atxml__RegisterRemoveSequence;
	struct atxml__RegisterRemoveSequenceResponse r;
	soap_default_atxml__RegisterRemoveSequenceResponse(soap, &r);
	soap_default_atxml__RegisterRemoveSequence(soap, &soap_tmp_atxml__RegisterRemoveSequence);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RegisterRemoveSequence(soap, &soap_tmp_atxml__RegisterRemoveSequence, "atxml:RegisterRemoveSequence", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RegisterRemoveSequence(soap, soap_tmp_atxml__RegisterRemoveSequence.Handle, soap_tmp_atxml__RegisterRemoveSequence.RemoveSequence, soap_tmp_atxml__RegisterRemoveSequence.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterRemoveSequenceResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterRemoveSequenceResponse(soap, &r, "atxml:RegisterRemoveSequenceResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterRemoveSequenceResponse(soap, &r, "atxml:RegisterRemoveSequenceResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterApplySequence(struct soap *soap)
{	struct atxml__RegisterApplySequence soap_tmp_atxml__RegisterApplySequence;
	struct atxml__RegisterApplySequenceResponse r;
	soap_default_atxml__RegisterApplySequenceResponse(soap, &r);
	soap_default_atxml__RegisterApplySequence(soap, &soap_tmp_atxml__RegisterApplySequence);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RegisterApplySequence(soap, &soap_tmp_atxml__RegisterApplySequence, "atxml:RegisterApplySequence", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RegisterApplySequence(soap, soap_tmp_atxml__RegisterApplySequence.Handle, soap_tmp_atxml__RegisterApplySequence.ApplySequence, soap_tmp_atxml__RegisterApplySequence.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterApplySequenceResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterApplySequenceResponse(soap, &r, "atxml:RegisterApplySequenceResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterApplySequenceResponse(soap, &r, "atxml:RegisterApplySequenceResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}


SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__TestStationStatus(struct soap *soap)
{	struct atxml__TestStationStatus soap_tmp_atxml__TestStationStatus;
	struct atxml__TestStationStatusResponse r;
	soap_default_atxml__TestStationStatusResponse(soap, &r);
	soap_default_atxml__TestStationStatus(soap, &soap_tmp_atxml__TestStationStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__TestStationStatus(soap, &soap_tmp_atxml__TestStationStatus, "atxml:TestStationStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__TestStationStatus(soap, soap_tmp_atxml__TestStationStatus.Handle, soap_tmp_atxml__TestStationStatus.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__TestStationStatusResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__TestStationStatusResponse(soap, &r, "atxml:TestStationStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__TestStationStatusResponse(soap, &r, "atxml:TestStationStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterInstStatus(struct soap *soap)
{	struct atxml__RegisterInstStatus soap_tmp_atxml__RegisterInstStatus;
	struct atxml__RegisterInstStatusResponse r;
	soap_default_atxml__RegisterInstStatusResponse(soap, &r);
	soap_default_atxml__RegisterInstStatus(soap, &soap_tmp_atxml__RegisterInstStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RegisterInstStatus(soap, &soap_tmp_atxml__RegisterInstStatus, "atxml:RegisterInstStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RegisterInstStatus(soap, soap_tmp_atxml__RegisterInstStatus.Handle, soap_tmp_atxml__RegisterInstStatus.InstStatus, soap_tmp_atxml__RegisterInstStatus.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterInstStatusResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterInstStatusResponse(soap, &r, "atxml:RegisterInstStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterInstStatusResponse(soap, &r, "atxml:RegisterInstStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__RegisterTmaSelect(struct soap *soap)
{	struct atxml__RegisterTmaSelect soap_tmp_atxml__RegisterTmaSelect;
	struct atxml__RegisterTmaSelectResponse soap_tmp_atxml__RegisterTmaSelectResponse;
	int soap_tmp_int;
	soap_default_atxml__RegisterTmaSelectResponse(soap, &soap_tmp_atxml__RegisterTmaSelectResponse);
	soap_default_int(soap, &soap_tmp_int);
	soap_tmp_atxml__RegisterTmaSelectResponse.result = &soap_tmp_int;
	soap_default_atxml__RegisterTmaSelect(soap, &soap_tmp_atxml__RegisterTmaSelect);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__RegisterTmaSelect(soap, &soap_tmp_atxml__RegisterTmaSelect, "atxml:RegisterTmaSelect", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__RegisterTmaSelect(soap, soap_tmp_atxml__RegisterTmaSelect.Handle, soap_tmp_atxml__RegisterTmaSelect.TmaList, &soap_tmp_int);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__RegisterTmaSelectResponse(soap, &soap_tmp_atxml__RegisterTmaSelectResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__RegisterTmaSelectResponse(soap, &soap_tmp_atxml__RegisterTmaSelectResponse, "atxml:RegisterTmaSelectResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__RegisterTmaSelectResponse(soap, &soap_tmp_atxml__RegisterTmaSelectResponse, "atxml:RegisterTmaSelectResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__SubmitUutId(struct soap *soap)
{	struct atxml__SubmitUutId soap_tmp_atxml__SubmitUutId;
	struct atxml__SubmitUutIdResponse r;
	soap_default_atxml__SubmitUutIdResponse(soap, &r);
	soap_default_atxml__SubmitUutId(soap, &soap_tmp_atxml__SubmitUutId);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__SubmitUutId(soap, &soap_tmp_atxml__SubmitUutId, "atxml:SubmitUutId", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__SubmitUutId(soap, soap_tmp_atxml__SubmitUutId.Handle, soap_tmp_atxml__SubmitUutId.UUT_Partnumber, soap_tmp_atxml__SubmitUutId.UUT_Serialnumber, soap_tmp_atxml__SubmitUutId.TmaBufferSize, soap_tmp_atxml__SubmitUutId.RaBufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__SubmitUutIdResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__SubmitUutIdResponse(soap, &r, "atxml:SubmitUutIdResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__SubmitUutIdResponse(soap, &r, "atxml:SubmitUutIdResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueSignal(struct soap *soap)
{	struct atxml__IssueSignal soap_tmp_atxml__IssueSignal;
	struct atxml__IssueSignalResponse r;
	soap_default_atxml__IssueSignalResponse(soap, &r);
	soap_default_atxml__IssueSignal(soap, &soap_tmp_atxml__IssueSignal);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__IssueSignal(soap, &soap_tmp_atxml__IssueSignal, "atxml:IssueSignal", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__IssueSignal(soap, soap_tmp_atxml__IssueSignal.Handle, soap_tmp_atxml__IssueSignal.SignalDescription, soap_tmp_atxml__IssueSignal.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueSignalResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueSignalResponse(soap, &r, "atxml:IssueSignalResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueSignalResponse(soap, &r, "atxml:IssueSignalResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__QueryInterStatus(struct soap *soap)
{	struct atxml__QueryInterStatus soap_tmp_atxml__QueryInterStatus;
	struct atxml__QueryInterStatusResponse r;
	soap_default_atxml__QueryInterStatusResponse(soap, &r);
	soap_default_atxml__QueryInterStatus(soap, &soap_tmp_atxml__QueryInterStatus);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__QueryInterStatus(soap, &soap_tmp_atxml__QueryInterStatus, "atxml:QueryInterStatus", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__QueryInterStatus(soap, soap_tmp_atxml__QueryInterStatus.Handle, soap_tmp_atxml__QueryInterStatus.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__QueryInterStatusResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__QueryInterStatusResponse(soap, &r, "atxml:QueryInterStatusResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__QueryInterStatusResponse(soap, &r, "atxml:QueryInterStatusResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__InvokeRemoveAllSequence(struct soap *soap)
{	struct atxml__InvokeRemoveAllSequence soap_tmp_atxml__InvokeRemoveAllSequence;
	struct atxml__InvokeRemoveAllSequenceResponse r;
	soap_default_atxml__InvokeRemoveAllSequenceResponse(soap, &r);
	soap_default_atxml__InvokeRemoveAllSequence(soap, &soap_tmp_atxml__InvokeRemoveAllSequence);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__InvokeRemoveAllSequence(soap, &soap_tmp_atxml__InvokeRemoveAllSequence, "atxml:InvokeRemoveAllSequence", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__InvokeRemoveAllSequence(soap, soap_tmp_atxml__InvokeRemoveAllSequence.Handle, soap_tmp_atxml__InvokeRemoveAllSequence.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__InvokeRemoveAllSequenceResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__InvokeRemoveAllSequenceResponse(soap, &r, "atxml:InvokeRemoveAllSequenceResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__InvokeRemoveAllSequenceResponse(soap, &r, "atxml:InvokeRemoveAllSequenceResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__InvokeApplyAllSequence(struct soap *soap)
{	struct atxml__InvokeApplyAllSequence soap_tmp_atxml__InvokeApplyAllSequence;
	struct atxml__InvokeApplyAllSequenceResponse r;
	soap_default_atxml__InvokeApplyAllSequenceResponse(soap, &r);
	soap_default_atxml__InvokeApplyAllSequence(soap, &soap_tmp_atxml__InvokeApplyAllSequence);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__InvokeApplyAllSequence(soap, &soap_tmp_atxml__InvokeApplyAllSequence, "atxml:InvokeApplyAllSequence", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__InvokeApplyAllSequence(soap, soap_tmp_atxml__InvokeApplyAllSequence.Handle, soap_tmp_atxml__InvokeApplyAllSequence.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__InvokeApplyAllSequenceResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__InvokeApplyAllSequenceResponse(soap, &r, "atxml:InvokeApplyAllSequenceResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__InvokeApplyAllSequenceResponse(soap, &r, "atxml:InvokeApplyAllSequenceResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueTestResults(struct soap *soap)
{	struct atxml__IssueTestResults soap_tmp_atxml__IssueTestResults;
	struct atxml__IssueTestResultsResponse r;
	soap_default_atxml__IssueTestResultsResponse(soap, &r);
	soap_default_atxml__IssueTestResults(soap, &soap_tmp_atxml__IssueTestResults);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__IssueTestResults(soap, &soap_tmp_atxml__IssueTestResults, "atxml:IssueTestResults", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__IssueTestResults(soap, soap_tmp_atxml__IssueTestResults.Handle, soap_tmp_atxml__IssueTestResults.TestResults, soap_tmp_atxml__IssueTestResults.TPS_Status, soap_tmp_atxml__IssueTestResults.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueTestResultsResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueTestResultsResponse(soap, &r, "atxml:IssueTestResultsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueTestResultsResponse(soap, &r, "atxml:IssueTestResultsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueTestResultsFile(struct soap *soap)
{	struct atxml__IssueTestResultsFile soap_tmp_atxml__IssueTestResultsFile;
	struct atxml__IssueTestResultsFileResponse r;
	soap_default_atxml__IssueTestResultsFileResponse(soap, &r);
	soap_default_atxml__IssueTestResultsFile(soap, &soap_tmp_atxml__IssueTestResultsFile);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__IssueTestResultsFile(soap, &soap_tmp_atxml__IssueTestResultsFile, "atxml:IssueTestResultsFile", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__IssueTestResultsFile(soap, soap_tmp_atxml__IssueTestResultsFile.Handle, soap_tmp_atxml__IssueTestResultsFile.TestResultsFile, soap_tmp_atxml__IssueTestResultsFile.TPS_Status, soap_tmp_atxml__IssueTestResultsFile.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueTestResultsFileResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueTestResultsFileResponse(soap, &r, "atxml:IssueTestResultsFileResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueTestResultsFileResponse(soap, &r, "atxml:IssueTestResultsFileResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueIst(struct soap *soap)
{	struct atxml__IssueIst soap_tmp_atxml__IssueIst;
	struct atxml__IssueIstResponse r;
	soap_default_atxml__IssueIstResponse(soap, &r);
	soap_default_atxml__IssueIst(soap, &soap_tmp_atxml__IssueIst);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__IssueIst(soap, &soap_tmp_atxml__IssueIst, "atxml:IssueIst", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__IssueIst(soap, soap_tmp_atxml__IssueIst.Handle, soap_tmp_atxml__IssueIst.InstSelfTest, soap_tmp_atxml__IssueIst.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueIstResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueIstResponse(soap, &r, "atxml:IssueIstResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueIstResponse(soap, &r, "atxml:IssueIstResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueNativeCmds(struct soap *soap)
{	struct atxml__IssueNativeCmds soap_tmp_atxml__IssueNativeCmds;
	struct atxml__IssueNativeCmdsResponse r;
	soap_default_atxml__IssueNativeCmdsResponse(soap, &r);
	soap_default_atxml__IssueNativeCmds(soap, &soap_tmp_atxml__IssueNativeCmds);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__IssueNativeCmds(soap, &soap_tmp_atxml__IssueNativeCmds, "atxml:IssueNativeCmds", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__IssueNativeCmds(soap, soap_tmp_atxml__IssueNativeCmds.Handle, soap_tmp_atxml__IssueNativeCmds.InstrumentCmds, soap_tmp_atxml__IssueNativeCmds.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueNativeCmdsResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueNativeCmdsResponse(soap, &r, "atxml:IssueNativeCmdsResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueNativeCmdsResponse(soap, &r, "atxml:IssueNativeCmdsResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_atxml__IssueDriverFunctionCall(struct soap *soap)
{	struct atxml__IssueDriverFunctionCall soap_tmp_atxml__IssueDriverFunctionCall;
	struct atxml__IssueDriverFunctionCallResponse r;
	soap_default_atxml__IssueDriverFunctionCallResponse(soap, &r);
	soap_default_atxml__IssueDriverFunctionCall(soap, &soap_tmp_atxml__IssueDriverFunctionCall);
	soap->encodingStyle = NULL;
	if (!soap_get_atxml__IssueDriverFunctionCall(soap, &soap_tmp_atxml__IssueDriverFunctionCall, "atxml:IssueDriverFunctionCall", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = atxml__IssueDriverFunctionCall(soap, soap_tmp_atxml__IssueDriverFunctionCall.Handle, soap_tmp_atxml__IssueDriverFunctionCall.DriverFunction, soap_tmp_atxml__IssueDriverFunctionCall.BufferSize, r);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_atxml__IssueDriverFunctionCallResponse(soap, &r);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_atxml__IssueDriverFunctionCallResponse(soap, &r, "atxml:IssueDriverFunctionCallResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_atxml__IssueDriverFunctionCallResponse(soap, &r, "atxml:IssueDriverFunctionCallResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

/* End of soapServer.cpp */
