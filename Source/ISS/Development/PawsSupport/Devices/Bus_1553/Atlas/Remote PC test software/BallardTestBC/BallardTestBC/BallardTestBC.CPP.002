
/**
*
*  BTI1553 DRIVER EXAMPLE 5  (08/12/2015)
*  Copyright (c) 2001-2015
*  Ballard Technology, Inc.
*  www.ballardtech.com
*  support@ballardtech.com
*  ALL RIGHTS RESERVED
*
*  NAME:   EXAMP5.C -- Simultaneous BC, RT, and monitor simulation
*
**/

/**
*
*  This example requires a Ballard 1553 Level C Device or higher.
*  It configures Card Number 0 as a BC, an RT, and a Bus Monitor.
*  The BC transmits one BC-RT message (command word 0843H).
*  The RT is configured with terminal address 1, so the
*  simulated RT receives the simulated BC's transmissions.
*  The data words transmitted by the RT are incremented and
*  displayed.  The data words received by the RT are read and
*  also displayed.
*
**/

#include "BTICard.H"
#include "BTI1553.H"
#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <Windows.h>
//#include <io.h>
//#include <WinBase.h>

#define	CARDNUM		  0
#define	MAX_CORES     4
#define	MAX_CHANNELS  32

#define	FRAMETIME	100000			/*Frame time in microseconds*/

void examplemain(void)
{
	HCARD   hCard;					/*Handle to card*/
	HCORE   hCore;					/*Handle to core*/
	ERRVAL  errval;					/*Error return value*/
	INT     corenum;				/*Core number*/
	INT     channum;				/*Channel number*/

	MSGADDR BCMsg;
	MSGADDR RTMsg;
	MSGADDR RTXmtMsg;
	ULONG  seqcount;
	ULONG  blkcnt;
	USHORT  BCData[32] = {0,0,0};
	USHORT  RTData[32] = {0,0,0};

	printf("\n    **********************************************************************");
	printf("\n    *                                                                    *");
	printf("\n    *  EXAMP5  (08/12/2015)                                              *");
	printf("\n    *  Copyright 2001-2015  Ballard Technology, Inc.  Everett, WA, USA.  *");
	printf("\n    *  All rights reserved.                                              *");
	printf("\n    *  Go to www.ballardtech.com or email support@ballardtech.com        *");
	printf("\n    *                                                                    *");
	printf("\n    *  BTI1553 Example 5                                                 *");
	printf("\n    *  \"Simultaneous BC, RT, and monitor simulation example.\"            *");
	printf("\n    *                                                                    *");
	printf("\n    **********************************************************************");

/**
*
*  Open the card with the specified card number.
*  An error value is returned which is tested
*  to determine if an error occurred.
*
**/

	errval = BTICard_CardOpen(&hCard,CARDNUM);

	if (errval)
	{
		printf("\nError:  Either card number %u is not present, or",CARDNUM);
		printf("\n        an error occurred (%i) opening the card.",errval);
		printf("\n        (%s)",BTICard_ErrDescStr(errval,hCard));
		printf("\n");
		exit(1);
	}

	printf("\nUsing BTI1553 card #%d",CARDNUM);

/**
*
*  Find the first MIL-STD-1553 core with level M, C or D capability.
*
**/

	for (corenum=0;corenum<MAX_CORES;corenum++)
	{
		errval = BTICard_CoreOpen(&hCore,corenum,hCard);
		if (errval) break;

		for (channum=0;channum<MAX_CHANNELS;channum++)
		{
			if ( BTI1553_ChGetInfo(INFO1553_MULTIMODE,channum,hCore) )
				break;
			if ( BTI1553_ChGetInfo(INFO1553_MULTIMODE,channum+1,hCore) )
				break;
		}

		if (channum != MAX_CHANNELS) break;
	}

	if (errval || corenum == MAX_CORES || channum == MAX_CHANNELS)
	{
		printf("\nError:  No MIL-STD-1553 level M, C or D channels present in card #%d.",CARDNUM);
		printf("\n");
		BTICard_CardClose(hCard);
		exit(1);
	}

	printf("\nUsing MIL-STD-1553 core #%d",corenum);
	printf("\nUsing MIL-STD-1553 channel #%d",channum);
	printf("\n");

/**
*
*  Configure the channel for bus controller mode.
*
**/

	BTICard_CardReset(hCore);									/*Reset the core*/

	errval = BTI1553_BCConfig(BCCFG1553_DEFAULT,channum,hCore);	/*Configure the core*/
	//errval = BTI1553_RTConfig(RTCFG1553_DEFAULT,1,channum,hCore);	/*Configure the core*/

	if (errval < 0)
	{
		printf("\nError:  An error was encountered (%i) while configuring for",errval);
		printf("\n        bus controller mode on channel #%d on core #%d.",channum,corenum);
		printf("\n        (%s)",BTICard_ErrDescStr(errval,hCard));
		printf("\n");
		BTICard_CardClose(hCard);
		exit(1);
	}

/**
*
*  Create a bus controller message and insert into the bus
*  controller schedule.
*
**/

	BCMsg = BTI1553_BCCreateMsg(MSGCRT1553_DEFAULT,0x0843,0,BCData,hCore);

	BTI1553_BCSchedFrame(FRAMETIME,channum,hCore);
//	BTI1553_BCSchedMsg(BCMsg,channum,hCore);

/**
*
*  Configure the channel for remote terminal mode as shown in
*  Example 3.
*
**/

	//errval = BTI1553_RTConfig(RTCFG1553_DEFAULT,1,channum,hCore);

	//if (errval < 0)
	//{
	//	printf("\nError:  An error was encountered (%i) while configuring for",errval);
	//	printf("\n        remote terminal mode on channel #%d on core #%d.",channum,corenum);
	//	printf("\n        (%s)",BTICard_ErrDescStr(errval,hCard));
	//	printf("\n");
	//	BTICard_CardClose(hCard);
	//	exit(1);
	//}

/**
*
*  Get the message address for a receive subaddress.
*
**/

	//USHORT xxx = BTI1553_ValPackCWD(1,1,2,10);
	//RTMsg = BTI1553_BCCreateMsg(MSGCRT1553_DEFAULT,xxx,0,RTData,hCore);
	//RTMsg = BTI1553_RTGetMsg(SUBADDRESS,1,RCV,2,channum,hCore);
	//RTXmtMsg = BTI1553_RTGetMsg(SUBADDRESS,1,XMT,2,channum,hCore);

/**
*
*  Configure the channel for monitor mode as shown in Example 4.
*
**/

	errval = BTI1553_MonConfig(MONCFG1553_DEFAULT,channum,hCore);

	if (errval < 0)
	{
		printf("\nError:  An error was encountered (%i) while configuring for",errval);
		printf("\n        monitor mode on channel #%d on core #%d.",channum,corenum);
		printf("\n        (%s)",BTICard_ErrDescStr(errval,hCard));
		printf("\n");
		BTICard_CardClose(hCard);
		exit(1);
	}

	//errval = BTI1553_MonFilterTA(0x00000002,channum,hCore);	/*Monitor RT address 1*/

	//if (errval < 0)
	//{
	//	printf("\nError:  An error was encountered (%i) while configuring the",errval);
	//	printf("\n        monitor filter on channel #%d on core #%d.",channum,corenum);
	//	printf("\n        (%s)",BTICard_ErrDescStr(errval,hCard));
	//	printf("\n");
	//	BTICard_CardClose(hCard);
	//	exit(1);
	//}

/**
*
*  Configure the sequential record.
*
**/

	errval = BTICard_SeqConfig(SEQCFG_DEFAULT,hCore);

	if (errval < 0)
	{
		printf("\nError:  An error was encountered (%i) while configuring the",errval);
		printf("\n        sequential record on on core #%d.",corenum);
		printf("\n        (%s)",BTICard_ErrDescStr(errval,hCard));
		printf("\n");
		BTICard_CardClose(hCard);
		exit(1);
	}

/**
*
*  Start the card to begin transmitting, receiving and monitoring messages.
*
**/

	BTICard_CardStart(hCore);

/**
*
*  Loop until a key is hit.
*
**/

	printf("\nPress any key to exit....\n\n");
	XMITFIELDS1553 BCXmitMsg;
	memset( &BCXmitMsg, 0, sizeof(BCXmitMsg));
	BCXmitMsg.ctrlflags = MSGCRT1553_BCRT;
	BCXmitMsg.cwd1 = BTI1553_ValPackCWD(1,0,2,10); //BC sends RT Receive command
	BCXmitMsg.data[0] = 0x0000;
	BCXmitMsg.data[1] = 0x0002;
	BCXmitMsg.data[2] = 0x0004;	
	//BTI1553_BCTransmitMsg( &BCXmitMsg, 0, hCore);

	XMITFIELDS1553 BCRecvMsg;
	memset( &BCRecvMsg, 0, sizeof(BCRecvMsg));
	BCRecvMsg.ctrlflags = MSGCRT1553_MON;
	BCRecvMsg.cwd1 = BTI1553_ValPackCWD(1,1,2,10); //BC sends RT Transmit command
	//BTI1553_BCTransmitMsg( &BCRecvMsg, 0, hCore);

	int indx = 0;
	while (!_kbhit())
	{
		int bufcount = 0;
		ULONG Status = 0;
		ULONG blockcount = 0;
		USHORT seqbuf[2048];
		SEQFINDINFO sfinfo;
		LPSEQRECORD1553 pRec1553;
		printf("\r");

		BCXmitMsg.errflags = 0;
		Status = BTI1553_BCTransmitMsg( &BCXmitMsg, 0, hCore);

		printf("Xmit {%04X %04X %04X} ",BCXmitMsg.data[0],BCXmitMsg.data[1],BCXmitMsg.data[2]);

		BCXmitMsg.data[0] += 2;		/*Update the data that the BC is transmitting*/
		BCXmitMsg.data[1] += 4;
		BCXmitMsg.data[2] += 6;
		Sleep(50);

		Status = BTI1553_BCTransmitMsg( &BCRecvMsg, 0, hCore);
		seqcount = BTICard_SeqBlkRd(seqbuf, sizeof(seqbuf) / sizeof(seqbuf[0]), &blkcnt, hCore);
		BTICard_SeqFindInit(seqbuf, seqcount, &sfinfo);
		printf(" Blks(%d) ",blkcnt);		// number of seqcount data blocks
		int iii = 1;
		while (!BTICard_SeqFindNext1553(&pRec1553, &sfinfo))
		{
			printf(" B%d",iii++);	// data block number
			int i = 0;
			for (i = 0; i < 3/*pRec1553->datacount*/; i++)	// only output 3 words
			{
				printf(" | %04X", (pRec1553->data[i]));
			}
			//printf("\n");
		}
		Sleep(10);
		Sleep(5000);
	}

/**
*
*  Stop the card.
*
**/

	BTICard_CardStop(hCore);

/**
*
*  The card MUST be closed before exiting the program.
*
**/

	BTICard_CardClose(hCard);
}
