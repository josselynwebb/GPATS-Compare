<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPass.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AQAAAAAAAHYAAAAoAAAAIAAAABAAAAABAAQAAAAAAAAAAADODgAA2A4AABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3RId3d3d3d3d3d3d3d3j/9CRHf/////////93d3d4d6IiJId3d3d3d3d/d3d3eHeiIiJId3d3d3d3f3
        d3d3h3oiIiJId3d3d3d393d3d4d6IioiJId3d3d3d/d3d3eHeiIooiJId3d3d3f3d3d3h3oiSHoiJId3
        d3d393d3d4d6Ikh3oiJHd3d3d/d3d3eHd6JHd3oiSHd3d3f3d3d3h3d6J3d3oiSHd3d393d3d4d3d3d3
        d3oiSHd3d/d3d3eHd3d3d3d3oiSId3f3d3d3iIiIiIiIiIoiQIiIh3d3d3d3d3d3d3d3okh3d3d3d3d3
        d3d3d3d3d3ond3d3d3c=
</value>
  </data>
  <data name="picFail.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AQAAAAAAAHYAAAAoAAAAIAAAABAAAAABAAQAAAAAAAAAAADODgAA2A4AABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3dwh3d3h3d3d3d3d3d3j///EQf/+Qf/////93d3d4d3dxEId3EQh3d3d/d3d3eHd3cREIeREQh3d3f3
        d3d3h3d3kREJEREId3d393d3d4d3d3kREREQd3d3d/d3d3eHd3d3kRERB3d3d3f3d3d3h3d3d3kREId3
        d3d393d3d4d3d3d5ERCHd3d3d/d3d3eHd3d3kRERCHd3d3f3d3d3h3d3d5ERkRCHd3d393d3d4d3d3cR
        B3kRCHd3d/d3d3eHd3d5EQd3kRCHd3f3d3d3iIiIkRGIiIkRCIiIh3d3d3d3d3mZd3d3kXd3d3d3d3d3
        d3d3d3d3d3d3d3d3d3c=
</value>
  </data>
  <data name="pCEP.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AQAAAAAAAHYAAAAoAAAAIAAAABAAAAABAAQAAAAAAAAAAADODgAA2A4AABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3d3d3d3d3j///////////////93d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3
        d3d3h3d3d3d3d3d3d3d393d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3h3d3d3d3d3d3
        d3d393d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3h3d3d3d3d3d3d3d393d3d4d3d3d3
        d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3iIiIiIiIiIiIiIiIh3d3d3d3d3d3d3d3d3d3d3d3d3d3
        d3d3d3d3d3d3d3d3d3c=
</value>
  </data>
  <data name="pSDT.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AQAAAAAAAHYAAAAoAAAAIAAAABAAAAABAAQAAAAAAAAAAADODgAA2A4AABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3d3d3d3d3j///////////////93d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3
        d3d3h3d3d3d3d3d3d3d393d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3h3d3d3d3d3d3
        d3d393d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3h3d3d3d3d3d3d3d393d3d4d3d3d3
        d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3iIiIiIiIiIiIiIiIh3d3d3d3d3d3d3d3d3d3d3d3d3d3
        d3d3d3d3d3d3d3d3d3c=
</value>
  </data>
  <data name="pHDB.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk12AQAAAAAAAHYAAAAoAAAAIAAAABAAAAABAAQAAAAAAAAAAADODgAA2A4AABAAAAAQAAAAAAAA/wAA
        gP8AgAD/AICA/4AAAP+AAID/gIAA/8DAwP+AgID/AAD//wD/AP8A/////wAA//8A/////wD//////3d3
        d3d3d3d3d3d3d3d3d3d3j///////////////93d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3
        d3d3h3d3d3d3d3d3d3d393d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3h3d3d3d3d3d3
        d3d393d3d4d3d3d3d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3h3d3d3d3d3d3d3d393d3d4d3d3d3
        d3d3d3d3d/d3d3eHd3d3d3d3d3d3d3f3d3d3iIiIiIiIiIiIiIiIh3d3d3d3d3d3d3d3d3d3d3d3d3d3
        d3d3d3d3d3d3d3d3d3c=
</value>
  </data>
</root>